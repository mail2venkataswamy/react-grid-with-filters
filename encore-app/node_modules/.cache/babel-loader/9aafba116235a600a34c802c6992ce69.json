{"ast":null,"code":"var _jsxFileName = \"/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/App.js\";\nimport React, { Component, useReducer } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.scss\";\nimport Filterscreen from \"./components/filterscreen/filterscreen.jsx\";\nimport Mainscreen from \"./components/mainscreen/mainscreen.jsx\";\nimport Editscreen from \"./components/editscreen/editscreen.jsx\";\nimport PriceEditingContext from \"./components/context/proce-editing-context.jsx\";\nimport PriceEditingReducer from \"./reducers/price-editing-reducer.jsx\";\nimport { computeHeadingLevel } from \"@testing-library/react\";\nimport _ from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getCurrentDateTime = () => {\n  let currentdate = new Date();\n  let datetime = \" \" + currentdate.getDate() + \"/\" + (currentdate.getMonth() + 1) + \"/\" + currentdate.getFullYear();\n  return datetime;\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onClickPriceRollOverrideButton = () => {\n      let maintenanceScreenData = this.state.maintenanceScreenData;\n      maintenanceScreenData.isPriceRollOverrideModalOpen = !maintenanceScreenData.isPriceRollOverrideModalOpen;\n      this.setState({\n        maintenanceScreenData\n      });\n    };\n\n    this.closePriceRollOverrideModal = () => {\n      let maintenanceScreenData = this.state.maintenanceScreenData;\n      maintenanceScreenData.isPriceRollOverrideModalOpen = !maintenanceScreenData.isPriceRollOverrideModalOpen;\n      this.setState({\n        maintenanceScreenData\n      });\n    };\n\n    this.onSelectReview = e => {\n      let maintenanceScreenData = this.state.maintenanceScreenData;\n      maintenanceScreenData.selectedReviewValue = e.target.value;\n      this.setState({\n        maintenanceScreenData\n      });\n\n      if (maintenanceScreenData.maintenanceGridData) {\n        maintenanceScreenData.openGridMustSelectedModal = true;\n        this.setState({\n          maintenanceScreenData\n        });\n      }\n    };\n\n    this.closeGridMustSelectedModal = () => {\n      let maintenanceScreenData = this.state.maintenanceScreenData;\n      maintenanceScreenData.openGridMustSelectedModal = false;\n      this.setState({\n        maintenanceScreenData\n      });\n    };\n\n    this.closeThresholdModal = () => {\n      let maintenanceScreenData = this.state.maintenanceScreenData;\n      maintenanceScreenData.isThresholdModalOpen = false;\n      this.setState({\n        maintenanceScreenData\n      });\n    };\n\n    this.onClickThresholdButton = () => {\n      let maintenanceScreenData = this.state.maintenanceScreenData;\n      maintenanceScreenData.isThresholdModalOpen = true;\n      this.setState({\n        maintenanceScreenData\n      });\n    };\n\n    this.onClickSuggestionItem = selectedValue => {\n      let filterPanelData = this.state.filterPanelData;\n      filterPanelData.cuspinValue = selectedValue;\n      this.setState({\n        filterPanelData\n      });\n    };\n\n    this.closeSuspendRestartRepoModal = () => {\n      let maintenanceScreenData = this.state.maintenanceScreenData;\n      maintenanceScreenData.isSuspendRestartRepoModalOpen = false;\n      this.setState({\n        maintenanceScreenData\n      });\n    };\n\n    this.onClickSuspendRestartRepoButton = () => {\n      let maintenanceScreenData = this.state.maintenanceScreenData;\n      maintenanceScreenData.isSuspendRestartRepoModalOpen = true;\n      this.setState({\n        maintenanceScreenData\n      });\n    };\n\n    this.closePublishValuedSecuritiesModal = () => {\n      let maintenanceScreenData = this.state.maintenanceScreenData;\n      maintenanceScreenData.isPublishValuedSecuritiesModalOpen = false;\n      this.setState({\n        maintenanceScreenData\n      });\n    };\n\n    this.onClickPublishValuedSecuritiesButton = () => {\n      let maintenanceScreenData = this.state.maintenanceScreenData;\n      maintenanceScreenData.isPublishValuedSecuritiesModalOpen = true;\n      this.setState({\n        maintenanceScreenData\n      });\n    };\n\n    this.toggleEditDashboardGrid = () => {\n      let editDashboardData = this.state.editDashboardData;\n      editDashboardData.showEditDashboardGrid = !this.state.editDashboardData.showEditDashboardGrid;\n      this.setState({\n        editDashboardData\n      });\n\n      if (editDashboardData.showEditDashboardGrid) {\n        document.getElementById(\"toggle\").setAttribute(\"style\", \"transform:rotate(180deg);left:4px;top:-3px\");\n      } else {\n        document.getElementById(\"toggle\").setAttribute(\"style\", \"transform:rotate(360deg)\");\n      }\n    };\n\n    this.onChangeHistCurrValue = e => {\n      let filterPanelData = this.state.filterPanelData;\n      filterPanelData.selectedHistCurrValue = e.target.value;\n      this.setState({\n        filterPanelData\n      });\n    };\n\n    this.setFromDate = date => {\n      let filterPanelData = this.state.filterPanelData;\n      console.log(filterPanelData.fromDate);\n      filterPanelData.fromDate = date;\n      this.setState({\n        filterPanelData\n      });\n    };\n\n    this.setToDate = date => {\n      let filterPanelData = this.state.filterPanelData;\n      console.log(filterPanelData.toDate);\n      filterPanelData.toDate = date;\n      this.setState({\n        filterPanelData\n      });\n    };\n\n    this.onClickIsinSuggestionItem = selectedValue => {\n      let filterPanelData = this.state.filterPanelData;\n      filterPanelData.isinValue = selectedValue;\n      this.setState({\n        filterPanelData\n      });\n    };\n\n    this.onClickOccSymbolSuggestionItem = selectedValue => {\n      let filterPanelData = this.state.filterPanelData;\n      filterPanelData.occSymbolValue = selectedValue;\n      this.setState({\n        filterPanelData\n      });\n    };\n\n    this.onAllTypeChecked = event => {\n      let typeData = this.state.filterPanelData.typeData;\n      let filterPanelData = this.state.filterPanelData;\n      typeData.forEach(type => {\n        return type.isChecked = event.target.checked;\n      });\n      filterPanelData.typeData = typeData;\n      filterPanelData.isAllTypeChecked = !filterPanelData.isAllTypeChecked;\n      this.setState({\n        filterPanelData\n      });\n    };\n\n    this.onSelectTypeCheckbox = event => {\n      let typeData = this.state.filterPanelData.typeData;\n      let filterPanelData = this.state.filterPanelData;\n      let isAllTypeChecked = false;\n      let selectionCount = 0;\n      typeData.forEach(type => {\n        if (type.value === event.target.value) type.isChecked = event.target.checked;\n\n        if (type.isChecked) {\n          selectionCount++;\n        }\n\n        isAllTypeChecked = selectionCount === typeData.length ? true : false;\n      });\n      filterPanelData.typeData = typeData;\n      filterPanelData.isAllTypeChecked = isAllTypeChecked;\n      this.setState({\n        filterPanelData\n      });\n    };\n\n    this.onAllTireChecked = event => {\n      let tierLevelData = this.state.filterPanelData.tierLevelData;\n      let filterPanelData = this.state.filterPanelData;\n      tierLevelData.forEach(tire => {\n        return tire.isChecked = event.target.checked;\n      });\n      filterPanelData.tierLevelData = tierLevelData;\n      filterPanelData.isAllTireChecked = !filterPanelData.isAllTireChecked;\n      this.setState({\n        filterPanelData\n      });\n    };\n\n    this.onSelectTireCheckbox = event => {\n      let tierLevelData = this.state.filterPanelData.tierLevelData;\n      let filterPanelData = this.state.filterPanelData;\n      let isAllTireChecked = false;\n      let selectionCount = 0;\n      tierLevelData.forEach(tire => {\n        if (tire.value === event.target.value) tire.isChecked = event.target.checked;\n\n        if (tire.isChecked) {\n          selectionCount++;\n        }\n\n        isAllTireChecked = selectionCount === tierLevelData.length ? true : false;\n      });\n      filterPanelData.tierLevelData = tierLevelData;\n      filterPanelData.isAllTireChecked = isAllTireChecked;\n      this.setState({\n        filterPanelData\n      });\n    };\n\n    this.onChangeClearedValue = selectedValue => {\n      let filterPanelData = this.state.filterPanelData;\n      filterPanelData.selectedClearedValue = selectedValue;\n      this.setState({\n        filterPanelData\n      });\n    };\n\n    this.onChangeCurrencyValue = selectedValue => {\n      let filterPanelData = this.state.filterPanelData;\n      filterPanelData.selectedCurrencyValue = selectedValue;\n      this.setState({\n        filterPanelData\n      });\n    };\n\n    this.onChangeCrossMarginEligibleValue = selectedValue => {\n      let filterPanelData = this.state.filterPanelData;\n      filterPanelData.selectedCrossMarginValue = selectedValue;\n      this.setState({\n        filterPanelData\n      });\n    };\n\n    this.onChangeFlaggedEditValue = selectedValue => {\n      let filterPanelData = this.state.filterPanelData;\n      filterPanelData.selectedFlaggedEditValue = selectedValue;\n      this.setState({\n        filterPanelData\n      });\n    };\n\n    this.onChangeReviewNeededValue = selectedValue => {\n      let filterPanelData = this.state.filterPanelData;\n      filterPanelData.selectedreviewNeededValue = selectedValue;\n      this.setState({\n        filterPanelData\n      });\n    };\n\n    this.onSelectEditedRecordValue = e => {\n      let filterPanelData = this.state.filterPanelData;\n      filterPanelData.editedRecordValue = e.target.value;\n      filterPanelData.isEditedRecordChecked = !filterPanelData.isEditedRecordChecked;\n      this.setState({\n        filterPanelData\n      });\n    };\n\n    this.onClickFiler = () => {\n      let filterPanelData = this.state.filterPanelData;\n      let filterObject = {\n        selectedHistCurrValue: filterPanelData.selectedHistCurrValue,\n        cuspinValue: filterPanelData.cuspinValue,\n        fromDate: filterPanelData.fromDate,\n        toDate: filterPanelData.toDate,\n        isinValue: filterPanelData.isinValue,\n        occSymbolValue: filterPanelData.occSymbolValue,\n        typeData: filterPanelData.typeData,\n        selectedClearedValue: filterPanelData.selectedClearedValue,\n        selectedCrossMarginValue: filterPanelData.selectedCrossMarginValue,\n        selectedCurrencyValue: filterPanelData.selectedCurrencyValue,\n        tierLevelData: filterPanelData.tierLevelData,\n        selectedFlaggedEditValue: filterPanelData.selectedFlaggedEditValue,\n        selectedreviewNeededValue: filterPanelData.selectedreviewNeededValue,\n        isEditedRecordChecked: filterPanelData.isEditedRecordChecked\n      };\n      alert(JSON.stringify(filterObject));\n    };\n\n    this.onClickReset = () => {\n      let filterPanelData = this.state.filterPanelData;\n      let intialFilterPanelState = this.state.intialFilterPanelState;\n      alert(JSON.stringify(intialFilterPanelState));\n      let data = { ...filterPanelData,\n        ...intialFilterPanelState\n      };\n      console.log(\"final object is\", data); //this.setState({ filterPanelData: intialFilterPanelState });\n\n      this.setState({\n        filterPanelData: data\n      });\n    };\n\n    this.state = {\n      intialFilterPanelState: {},\n      maintenanceScreenData: {\n        isPriceRollOverrideModalOpen: false,\n        PriceRollOverrideMModalWarningMessage: \"A record must be selected to perform this action\",\n        selectedReviewValue: \"\",\n        maintenanceGridData: [],\n        openGridMustSelectedModal: false,\n        gridMustBePopulateModalWarningMessage: \"Grid must be selected\",\n        isThresholdModalOpen: false,\n        isSuspendRestartRepoModalOpen: false,\n        isPublishValuedSecuritiesModalOpen: false,\n        matenanceDataLastPublishDate: getCurrentDateTime()\n      },\n      editDashboardData: {\n        showEditDashboardGrid: true\n      },\n      filterPanelData: {\n        cuspinSearchValue: \"\",\n        cuspinData: [{\n          id: 1,\n          value: \"AA001200\"\n        }, {\n          id: 2,\n          value: \"AA001201\"\n        }, {\n          id: 3,\n          value: \"AA001202\"\n        }, {\n          id: 4,\n          value: \"AA001203\"\n        }, {\n          id: 5,\n          value: \"AB001204\"\n        }, {\n          id: 6,\n          value: \"BB001205\"\n        }, {\n          id: 7,\n          value: \"BA001206\"\n        }, {\n          id: 8,\n          value: \"CC001207\"\n        }, {\n          id: 9,\n          value: \"BC001208\"\n        }, {\n          id: 10,\n          value: \"CA001209\"\n        }],\n        cuspinSuggestionResult: [],\n        cuspinValue: \"\",\n        currHistOptions: [{\n          label: \"CURRENT\",\n          value: \"Current\"\n        }, {\n          label: \"HISTORICAL\",\n          value: \"Historical\"\n        }],\n        selectedHistCurrValue: {\n          label: \"CURRENT\",\n          value: \"Current\"\n        },\n        fromDate: new Date(),\n        toDate: new Date(),\n        isinData: [{\n          id: 1,\n          value: \"AA001200\"\n        }, {\n          id: 2,\n          value: \"AA001201\"\n        }, {\n          id: 3,\n          value: \"AA001202\"\n        }, {\n          id: 4,\n          value: \"AA001203\"\n        }, {\n          id: 5,\n          value: \"AB001204\"\n        }, {\n          id: 6,\n          value: \"BB001205\"\n        }, {\n          id: 7,\n          value: \"BA001206\"\n        }, {\n          id: 8,\n          value: \"CC001207\"\n        }, {\n          id: 9,\n          value: \"BC001208\"\n        }, {\n          id: 10,\n          value: \"CA001209\"\n        }],\n        isinSuggestionResult: [],\n        isinValue: \"\",\n        occSymbolData: [{\n          id: 1,\n          value: \"AA001200\"\n        }, {\n          id: 2,\n          value: \"AA001201\"\n        }, {\n          id: 3,\n          value: \"AA001202\"\n        }, {\n          id: 4,\n          value: \"AA001203\"\n        }, {\n          id: 5,\n          value: \"AB001204\"\n        }, {\n          id: 6,\n          value: \"BB001205\"\n        }, {\n          id: 7,\n          value: \"BA001206\"\n        }, {\n          id: 8,\n          value: \"CC001207\"\n        }, {\n          id: 9,\n          value: \"BC001208\"\n        }, {\n          id: 10,\n          value: \"CA001209\"\n        }],\n        occSymbolSuggestionResult: [],\n        occSymbolValue: \"\",\n        isAllTypeChecked: false,\n        typeData: [{\n          label: \"Common Stock\",\n          value: \"commonStock\",\n          isChecked: false\n        }, {\n          label: \"Preffered Stock\",\n          value: \"prefferedStock\",\n          isChecked: false\n        }, {\n          label: \"Index\",\n          value: \"index\",\n          isChecked: false\n        }, {\n          label: \"Corporate Debt\",\n          value: \"corporateDebt\",\n          isChecked: false\n        }, {\n          label: \"FMS\",\n          value: \"fms\",\n          isChecked: false\n        }],\n        selectClearedOptions: [{\n          label: \"BOTH\",\n          value: \"ClearedAndNonCleared\"\n        }, {\n          label: \"Cleared\",\n          value: \"Cleared\"\n        }, {\n          label: \"Non Cleared\",\n          value: \"Non Cleared\"\n        }],\n        selectedClearedValue: {\n          label: \"BOTH\",\n          value: \"ClearedAndNonCleared\"\n        },\n        selectCrossMarginOptions: [{\n          label: \"BOTH\",\n          value: \"CrossMarginAndNonCrossMragin\"\n        }, {\n          label: \"Cross Margin Eligible\",\n          value: \"CrossMargin\"\n        }, {\n          label: \"Non Cross Margin Eligible\",\n          value: \"NonCrossMargin\"\n        }],\n        selectedCrossMarginValue: {\n          label: \"BOTH\",\n          value: \"CrossMarginAndNonCrossMragin\"\n        },\n        selectCurrencyOptions: [{\n          label: \"ALL\",\n          value: \"All\"\n        }, {\n          label: \"USD\",\n          value: \"USD\"\n        }, {\n          label: \"AUD\",\n          value: \"Aud\"\n        }, {\n          label: \"CAD\",\n          value: \"Cad\"\n        }],\n        selectedCurrencyValue: {\n          label: \"USD\",\n          value: \"USD\"\n        },\n        tierLevelData: [{\n          label: \"1\",\n          value: \"one\",\n          isChecked: false\n        }, {\n          label: \"2\",\n          value: \"two\",\n          isChecked: false\n        }, {\n          label: \"3\",\n          value: \"three\",\n          isChecked: false\n        }, {\n          label: \"4\",\n          value: \"four\",\n          isChecked: false\n        }],\n        isAllTireChecked: false,\n        flaggedEditOptions: [{\n          label: \"Final - Large Difference Vs Vender\",\n          value: \"Final - Large Difference Vs Vender\"\n        }, {\n          label: \"Final - Large varience Vs previous\",\n          value: \"Final - Large varience Vs previous\"\n        }, {\n          label: \"Final - Missing or Zero Final Price\",\n          value: \"Final - Missing or Zero Final Price\"\n        }],\n        selectedFlaggedEditValue: {\n          label: \"Final - Large Difference Vs Vender\",\n          value: \"Final - Large Difference Vs Vender\"\n        },\n        reviewNeededOptions: [{\n          label: \"Final - Large Difference Vs Vender\",\n          value: \"Final - Large Difference Vs Vender\"\n        }, {\n          label: \"Final - Large varience Vs previous\",\n          value: \"Final - Large varience Vs previous\"\n        }, {\n          label: \"Final - Missing or Zero Final Price\",\n          value: \"Final - Missing or Zero Final Price\"\n        }],\n        selectedreviewNeededValue: {\n          label: \"Final - Large Difference Vs Vender\",\n          value: \"Final - Large Difference Vs Vender\"\n        },\n        isEditedRecordChecked: false,\n        editedRecordValue: \"\"\n      }\n    };\n    this.onChangeCuspinValue = this.onChangeCuspinValue.bind(this);\n  }\n\n  onChangeCuspinValue(e) {\n    let data = this.state.filterPanelData.cuspinData;\n    let filterPanelData = this.state.filterPanelData;\n    let result = e.target.value && data && data.filter(item => {\n      return item.value.toLowerCase().includes(e.target.value.trim().toLowerCase());\n    });\n    console.log(result);\n    filterPanelData.cuspinSuggestionResult = result;\n    this.setState({\n      filterPanelData\n    });\n  }\n\n  onChangeIsinValue(e) {\n    let data = this.state.filterPanelData.isinData;\n    let filterPanelData = this.state.filterPanelData;\n    let result = e.target.value && data && data.filter(item => {\n      return item.value.toLowerCase().includes(e.target.value.trim().toLowerCase());\n    });\n    console.log(result);\n    filterPanelData.isinSuggestionResult = result;\n    this.setState({\n      filterPanelData\n    });\n  }\n\n  onChangeOccSymbolValue(e) {\n    let data = this.state.filterPanelData.occSymbolData;\n    let filterPanelData = this.state.filterPanelData;\n    let result = e.target.value && data && data.filter(item => {\n      return item.value.toLowerCase().includes(e.target.value.trim().toLowerCase());\n    });\n    console.log(result);\n    filterPanelData.occSymbolSuggestionResult = result;\n    this.setState({\n      filterPanelData\n    });\n  }\n\n  componentDidMount() {\n    let filterPanelData = this.state.filterPanelData;\n    let filterObject1 = this.state.filterPanelData;\n    let filterObject = {\n      selectedHistCurrValue: filterPanelData.selectedHistCurrValue,\n      cuspinValue: filterPanelData.cuspinValue,\n      fromDate: filterPanelData.fromDate,\n      toDate: filterPanelData.toDate,\n      isinValue: filterPanelData.isinValue,\n      occSymbolValue: filterPanelData.occSymbolValue,\n      typeData: filterPanelData.typeData,\n      selectedClearedValue: filterPanelData.selectedClearedValue,\n      selectedCrossMarginValue: filterPanelData.selectedCrossMarginValue,\n      selectedCurrencyValue: filterPanelData.selectedCurrencyValue,\n      tierLevelData: filterPanelData.tierLevelData,\n      selectedFlaggedEditValue: filterPanelData.selectedFlaggedEditValue,\n      selectedreviewNeededValue: filterPanelData.selectedreviewNeededValue,\n      isEditedRecordChecked: filterPanelData.isEditedRecordChecked,\n      editedRecordValue: filterPanelData.editedRecordValue\n    };\n    let data = { ...filterPanelData,\n      ...filterObject\n    };\n    alert(JSON.stringify(filterObject));\n    this.setState({\n      intialFilterPanelState: data\n    });\n  }\n\n  render() {\n    let data = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainVS\",\n      children: [/*#__PURE__*/_jsxDEV(Filterscreen, {\n        onChangeCuspinValue: e => this.onChangeCuspinValue(e),\n        data: this.state,\n        onClickSuggestionItem: this.onClickSuggestionItem,\n        onChangeHistCurrValue: e => this.onChangeHistCurrValue(e),\n        setFromDate: e => this.setFromDate(e),\n        setToDate: e => this.setToDate(e),\n        onChangeIsinValue: e => this.onChangeIsinValue(e),\n        onClickIsinSuggestionItem: this.onClickIsinSuggestionItem,\n        onChangeOccSymbolValue: e => this.onChangeOccSymbolValue(e),\n        onClickOccSymbolSuggestionItem: this.onClickOccSymbolSuggestionItem,\n        onSelectTypeCheckbox: e => this.onSelectTypeCheckbox(e),\n        onAllTypeChecked: e => this.onAllTypeChecked(e),\n        onSelectTireCheckbox: e => this.onSelectTireCheckbox(e),\n        onAllTireChecked: e => this.onAllTireChecked(e),\n        onChangeCrossMarginEligibleValue: e => this.onChangeCrossMarginEligibleValue(e),\n        onChangeCurrencyValue: e => this.onChangeCurrencyValue(e),\n        onChangeClearedValue: e => this.onChangeClearedValue(e),\n        onChangeFlaggedEditValue: e => this.onChangeFlaggedEditValue(e),\n        onChangeReviewNeededValue: e => this.onChangeReviewNeededValue(e),\n        onSelectEditedRecordValue: e => this.onSelectEditedRecordValue(e),\n        onClickFiler: this.onClickFiler,\n        onClickReset: this.onClickReset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainEdit\",\n        children: [/*#__PURE__*/_jsxDEV(Mainscreen, {\n          data: data,\n          onClickPriceRollOverrideButton: this.onClickPriceRollOverrideButton,\n          closePriceRollOverrideModal: this.closePriceRollOverrideModal,\n          onSelectReview: e => this.onSelectReview(e),\n          closeGridMustSelectedModal: this.closeGridMustSelectedModal,\n          closeThresholdModal: this.closeThresholdModal,\n          onClickThresholdButton: this.onClickThresholdButton,\n          onClickSuspendRestartRepoButton: this.onClickSuspendRestartRepoButton,\n          closeSuspendRestartRepoModal: this.closeSuspendRestartRepoModal,\n          closePublishValuedSecuritiesModal: this.closePublishValuedSecuritiesModal,\n          onClickPublishValuedSecuritiesButton: this.onClickPublishValuedSecuritiesButton,\n          onGridReady: this.onGridReady\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Editscreen, {\n          toggleEditDashboardGrid: this.toggleEditDashboardGrid,\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/App.js"],"names":["React","Component","useReducer","Filterscreen","Mainscreen","Editscreen","PriceEditingContext","PriceEditingReducer","computeHeadingLevel","_","getCurrentDateTime","currentdate","Date","datetime","getDate","getMonth","getFullYear","App","constructor","props","onClickPriceRollOverrideButton","maintenanceScreenData","state","isPriceRollOverrideModalOpen","setState","closePriceRollOverrideModal","onSelectReview","e","selectedReviewValue","target","value","maintenanceGridData","openGridMustSelectedModal","closeGridMustSelectedModal","closeThresholdModal","isThresholdModalOpen","onClickThresholdButton","onClickSuggestionItem","selectedValue","filterPanelData","cuspinValue","closeSuspendRestartRepoModal","isSuspendRestartRepoModalOpen","onClickSuspendRestartRepoButton","closePublishValuedSecuritiesModal","isPublishValuedSecuritiesModalOpen","onClickPublishValuedSecuritiesButton","toggleEditDashboardGrid","editDashboardData","showEditDashboardGrid","document","getElementById","setAttribute","onChangeHistCurrValue","selectedHistCurrValue","setFromDate","date","console","log","fromDate","setToDate","toDate","onClickIsinSuggestionItem","isinValue","onClickOccSymbolSuggestionItem","occSymbolValue","onAllTypeChecked","event","typeData","forEach","type","isChecked","checked","isAllTypeChecked","onSelectTypeCheckbox","selectionCount","length","onAllTireChecked","tierLevelData","tire","isAllTireChecked","onSelectTireCheckbox","onChangeClearedValue","selectedClearedValue","onChangeCurrencyValue","selectedCurrencyValue","onChangeCrossMarginEligibleValue","selectedCrossMarginValue","onChangeFlaggedEditValue","selectedFlaggedEditValue","onChangeReviewNeededValue","selectedreviewNeededValue","onSelectEditedRecordValue","editedRecordValue","isEditedRecordChecked","onClickFiler","filterObject","alert","JSON","stringify","onClickReset","intialFilterPanelState","data","PriceRollOverrideMModalWarningMessage","gridMustBePopulateModalWarningMessage","matenanceDataLastPublishDate","cuspinSearchValue","cuspinData","id","cuspinSuggestionResult","currHistOptions","label","isinData","isinSuggestionResult","occSymbolData","occSymbolSuggestionResult","selectClearedOptions","selectCrossMarginOptions","selectCurrencyOptions","flaggedEditOptions","reviewNeededOptions","onChangeCuspinValue","bind","result","filter","item","toLowerCase","includes","trim","onChangeIsinValue","onChangeOccSymbolValue","componentDidMount","filterObject1","render","onGridReady"],"mappings":"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","sourcesContent":["import React, { Component, useReducer } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.scss\";\nimport Filterscreen from \"./components/filterscreen/filterscreen.jsx\";\nimport Mainscreen from \"./components/mainscreen/mainscreen.jsx\";\nimport Editscreen from \"./components/editscreen/editscreen.jsx\";\nimport PriceEditingContext from \"./components/context/proce-editing-context.jsx\";\nimport PriceEditingReducer from \"./reducers/price-editing-reducer.jsx\";\nimport { computeHeadingLevel } from \"@testing-library/react\";\nimport _ from \"lodash\";\n\nconst getCurrentDateTime = () => {\n  let currentdate = new Date();\n  let datetime =\n    \" \" +\n    currentdate.getDate() +\n    \"/\" +\n    (currentdate.getMonth() + 1) +\n    \"/\" +\n    currentdate.getFullYear();\n  return datetime;\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      intialFilterPanelState: {},\n      maintenanceScreenData: {\n        isPriceRollOverrideModalOpen: false,\n        PriceRollOverrideMModalWarningMessage:\n          \"A record must be selected to perform this action\",\n        selectedReviewValue: \"\",\n        maintenanceGridData: [],\n        openGridMustSelectedModal: false,\n        gridMustBePopulateModalWarningMessage: \"Grid must be selected\",\n        isThresholdModalOpen: false,\n        isSuspendRestartRepoModalOpen: false,\n        isPublishValuedSecuritiesModalOpen: false,\n        matenanceDataLastPublishDate: getCurrentDateTime(),\n      },\n      editDashboardData: { showEditDashboardGrid: true },\n      filterPanelData: {\n        cuspinSearchValue: \"\",\n        cuspinData: [\n          { id: 1, value: \"AA001200\" },\n          { id: 2, value: \"AA001201\" },\n          { id: 3, value: \"AA001202\" },\n          { id: 4, value: \"AA001203\" },\n          { id: 5, value: \"AB001204\" },\n          { id: 6, value: \"BB001205\" },\n          { id: 7, value: \"BA001206\" },\n          { id: 8, value: \"CC001207\" },\n          { id: 9, value: \"BC001208\" },\n          { id: 10, value: \"CA001209\" },\n        ],\n        cuspinSuggestionResult: [],\n        cuspinValue: \"\",\n        currHistOptions: [\n          { label: \"CURRENT\", value: \"Current\" },\n          { label: \"HISTORICAL\", value: \"Historical\" },\n        ],\n        selectedHistCurrValue: { label: \"CURRENT\", value: \"Current\" },\n        fromDate: new Date(),\n        toDate: new Date(),\n        isinData: [\n          { id: 1, value: \"AA001200\" },\n          { id: 2, value: \"AA001201\" },\n          { id: 3, value: \"AA001202\" },\n          { id: 4, value: \"AA001203\" },\n          { id: 5, value: \"AB001204\" },\n          { id: 6, value: \"BB001205\" },\n          { id: 7, value: \"BA001206\" },\n          { id: 8, value: \"CC001207\" },\n          { id: 9, value: \"BC001208\" },\n          { id: 10, value: \"CA001209\" },\n        ],\n        isinSuggestionResult: [],\n        isinValue: \"\",\n        occSymbolData: [\n          { id: 1, value: \"AA001200\" },\n          { id: 2, value: \"AA001201\" },\n          { id: 3, value: \"AA001202\" },\n          { id: 4, value: \"AA001203\" },\n          { id: 5, value: \"AB001204\" },\n          { id: 6, value: \"BB001205\" },\n          { id: 7, value: \"BA001206\" },\n          { id: 8, value: \"CC001207\" },\n          { id: 9, value: \"BC001208\" },\n          { id: 10, value: \"CA001209\" },\n        ],\n        occSymbolSuggestionResult: [],\n        occSymbolValue: \"\",\n        isAllTypeChecked: false,\n        typeData: [\n          { label: \"Common Stock\", value: \"commonStock\", isChecked: false },\n          {\n            label: \"Preffered Stock\",\n            value: \"prefferedStock\",\n            isChecked: false,\n          },\n          { label: \"Index\", value: \"index\", isChecked: false },\n          { label: \"Corporate Debt\", value: \"corporateDebt\", isChecked: false },\n          { label: \"FMS\", value: \"fms\", isChecked: false },\n        ],\n        selectClearedOptions: [\n          { label: \"BOTH\", value: \"ClearedAndNonCleared\" },\n          { label: \"Cleared\", value: \"Cleared\" },\n          { label: \"Non Cleared\", value: \"Non Cleared\" },\n        ],\n        selectedClearedValue: { label: \"BOTH\", value: \"ClearedAndNonCleared\" },\n        selectCrossMarginOptions: [\n          { label: \"BOTH\", value: \"CrossMarginAndNonCrossMragin\" },\n          { label: \"Cross Margin Eligible\", value: \"CrossMargin\" },\n          { label: \"Non Cross Margin Eligible\", value: \"NonCrossMargin\" },\n        ],\n        selectedCrossMarginValue: {\n          label: \"BOTH\",\n          value: \"CrossMarginAndNonCrossMragin\",\n        },\n        selectCurrencyOptions: [\n          { label: \"ALL\", value: \"All\" },\n          { label: \"USD\", value: \"USD\" },\n          { label: \"AUD\", value: \"Aud\" },\n          { label: \"CAD\", value: \"Cad\" },\n        ],\n        selectedCurrencyValue: { label: \"USD\", value: \"USD\" },\n        tierLevelData: [\n          { label: \"1\", value: \"one\", isChecked: false },\n          { label: \"2\", value: \"two\", isChecked: false },\n          { label: \"3\", value: \"three\", isChecked: false },\n          { label: \"4\", value: \"four\", isChecked: false },\n        ],\n        isAllTireChecked: false,\n        flaggedEditOptions: [\n          {\n            label: \"Final - Large Difference Vs Vender\",\n            value: \"Final - Large Difference Vs Vender\",\n          },\n          {\n            label: \"Final - Large varience Vs previous\",\n            value: \"Final - Large varience Vs previous\",\n          },\n          {\n            label: \"Final - Missing or Zero Final Price\",\n            value: \"Final - Missing or Zero Final Price\",\n          },\n        ],\n        selectedFlaggedEditValue: {\n          label: \"Final - Large Difference Vs Vender\",\n          value: \"Final - Large Difference Vs Vender\",\n        },\n        reviewNeededOptions: [\n          {\n            label: \"Final - Large Difference Vs Vender\",\n            value: \"Final - Large Difference Vs Vender\",\n          },\n          {\n            label: \"Final - Large varience Vs previous\",\n            value: \"Final - Large varience Vs previous\",\n          },\n          {\n            label: \"Final - Missing or Zero Final Price\",\n            value: \"Final - Missing or Zero Final Price\",\n          },\n        ],\n        selectedreviewNeededValue: {\n          label: \"Final - Large Difference Vs Vender\",\n          value: \"Final - Large Difference Vs Vender\",\n        },\n        isEditedRecordChecked: false,\n        editedRecordValue: \"\",\n      },\n    };\n\n    this.onChangeCuspinValue = this.onChangeCuspinValue.bind(this);\n  }\n\n  onClickPriceRollOverrideButton = () => {\n    let maintenanceScreenData = this.state.maintenanceScreenData;\n    maintenanceScreenData.isPriceRollOverrideModalOpen = !maintenanceScreenData.isPriceRollOverrideModalOpen;\n    this.setState({\n      maintenanceScreenData,\n    });\n  };\n  closePriceRollOverrideModal = () => {\n    let maintenanceScreenData = this.state.maintenanceScreenData;\n    maintenanceScreenData.isPriceRollOverrideModalOpen = !maintenanceScreenData.isPriceRollOverrideModalOpen;\n    this.setState({\n      maintenanceScreenData,\n    });\n  };\n\n  onChangeCuspinValue(e) {\n    let data = this.state.filterPanelData.cuspinData;\n    let filterPanelData = this.state.filterPanelData;\n\n    let result =\n      e.target.value &&\n      data &&\n      data.filter((item) => {\n        return item.value\n          .toLowerCase()\n          .includes(e.target.value.trim().toLowerCase());\n      });\n    console.log(result);\n    filterPanelData.cuspinSuggestionResult = result;\n    this.setState({\n      filterPanelData,\n    });\n  }\n  onSelectReview = (e) => {\n    let maintenanceScreenData = this.state.maintenanceScreenData;\n    maintenanceScreenData.selectedReviewValue = e.target.value;\n    this.setState({\n      maintenanceScreenData,\n    });\n    if (maintenanceScreenData.maintenanceGridData) {\n      maintenanceScreenData.openGridMustSelectedModal = true;\n      this.setState({\n        maintenanceScreenData,\n      });\n    }\n  };\n  closeGridMustSelectedModal = () => {\n    let maintenanceScreenData = this.state.maintenanceScreenData;\n    maintenanceScreenData.openGridMustSelectedModal = false;\n    this.setState({\n      maintenanceScreenData,\n    });\n  };\n  closeThresholdModal = () => {\n    let maintenanceScreenData = this.state.maintenanceScreenData;\n    maintenanceScreenData.isThresholdModalOpen = false;\n    this.setState({\n      maintenanceScreenData,\n    });\n  };\n  onClickThresholdButton = () => {\n    let maintenanceScreenData = this.state.maintenanceScreenData;\n    maintenanceScreenData.isThresholdModalOpen = true;\n    this.setState({\n      maintenanceScreenData,\n    });\n  };\n  onClickSuggestionItem = (selectedValue) => {\n    let filterPanelData = this.state.filterPanelData;\n    filterPanelData.cuspinValue = selectedValue;\n    this.setState({\n      filterPanelData,\n    });\n  };\n  closeSuspendRestartRepoModal = () => {\n    let maintenanceScreenData = this.state.maintenanceScreenData;\n    maintenanceScreenData.isSuspendRestartRepoModalOpen = false;\n    this.setState({\n      maintenanceScreenData,\n    });\n  };\n  onClickSuspendRestartRepoButton = () => {\n    let maintenanceScreenData = this.state.maintenanceScreenData;\n    maintenanceScreenData.isSuspendRestartRepoModalOpen = true;\n    this.setState({\n      maintenanceScreenData,\n    });\n  };\n\n  closePublishValuedSecuritiesModal = () => {\n    let maintenanceScreenData = this.state.maintenanceScreenData;\n    maintenanceScreenData.isPublishValuedSecuritiesModalOpen = false;\n    this.setState({\n      maintenanceScreenData,\n    });\n  };\n  onClickPublishValuedSecuritiesButton = () => {\n    let maintenanceScreenData = this.state.maintenanceScreenData;\n    maintenanceScreenData.isPublishValuedSecuritiesModalOpen = true;\n    this.setState({\n      maintenanceScreenData,\n    });\n  };\n  toggleEditDashboardGrid = () => {\n    let editDashboardData = this.state.editDashboardData;\n    editDashboardData.showEditDashboardGrid = !this.state.editDashboardData\n      .showEditDashboardGrid;\n    this.setState({\n      editDashboardData,\n    });\n    if (editDashboardData.showEditDashboardGrid) {\n      document\n        .getElementById(\"toggle\")\n        .setAttribute(\"style\", \"transform:rotate(180deg);left:4px;top:-3px\");\n    } else {\n      document\n        .getElementById(\"toggle\")\n        .setAttribute(\"style\", \"transform:rotate(360deg)\");\n    }\n  };\n  onChangeHistCurrValue = (e) => {\n    let filterPanelData = this.state.filterPanelData;\n    filterPanelData.selectedHistCurrValue = e.target.value;\n    this.setState({\n      filterPanelData,\n    });\n  };\n  setFromDate = (date) => {\n    let filterPanelData = this.state.filterPanelData;\n    console.log(filterPanelData.fromDate);\n    filterPanelData.fromDate = date;\n    this.setState({\n      filterPanelData,\n    });\n  };\n  setToDate = (date) => {\n    let filterPanelData = this.state.filterPanelData;\n    console.log(filterPanelData.toDate);\n    filterPanelData.toDate = date;\n    this.setState({\n      filterPanelData,\n    });\n  };\n  onClickIsinSuggestionItem = (selectedValue) => {\n    let filterPanelData = this.state.filterPanelData;\n    filterPanelData.isinValue = selectedValue;\n    this.setState({\n      filterPanelData,\n    });\n  };\n  onClickOccSymbolSuggestionItem = (selectedValue) => {\n    let filterPanelData = this.state.filterPanelData;\n    filterPanelData.occSymbolValue = selectedValue;\n    this.setState({\n      filterPanelData,\n    });\n  };\n  onChangeIsinValue(e) {\n    let data = this.state.filterPanelData.isinData;\n    let filterPanelData = this.state.filterPanelData;\n\n    let result =\n      e.target.value &&\n      data &&\n      data.filter((item) => {\n        return item.value\n          .toLowerCase()\n          .includes(e.target.value.trim().toLowerCase());\n      });\n    console.log(result);\n    filterPanelData.isinSuggestionResult = result;\n    this.setState({\n      filterPanelData,\n    });\n  }\n  onChangeOccSymbolValue(e) {\n    let data = this.state.filterPanelData.occSymbolData;\n    let filterPanelData = this.state.filterPanelData;\n\n    let result =\n      e.target.value &&\n      data &&\n      data.filter((item) => {\n        return item.value\n          .toLowerCase()\n          .includes(e.target.value.trim().toLowerCase());\n      });\n    console.log(result);\n    filterPanelData.occSymbolSuggestionResult = result;\n    this.setState({\n      filterPanelData,\n    });\n  }\n  onAllTypeChecked = (event) => {\n    let typeData = this.state.filterPanelData.typeData;\n    let filterPanelData = this.state.filterPanelData;\n\n    typeData.forEach((type) => {\n      return (type.isChecked = event.target.checked);\n    });\n    filterPanelData.typeData = typeData;\n    filterPanelData.isAllTypeChecked = !filterPanelData.isAllTypeChecked;\n    this.setState({ filterPanelData });\n  };\n\n  onSelectTypeCheckbox = (event) => {\n    let typeData = this.state.filterPanelData.typeData;\n    let filterPanelData = this.state.filterPanelData;\n    let isAllTypeChecked = false;\n    let selectionCount = 0;\n    typeData.forEach((type) => {\n      if (type.value === event.target.value)\n        type.isChecked = event.target.checked;\n\n      if (type.isChecked) {\n        selectionCount++;\n      }\n      isAllTypeChecked = selectionCount === typeData.length ? true : false;\n    });\n    filterPanelData.typeData = typeData;\n    filterPanelData.isAllTypeChecked = isAllTypeChecked;\n    this.setState({ filterPanelData });\n  };\n  onAllTireChecked = (event) => {\n    let tierLevelData = this.state.filterPanelData.tierLevelData;\n    let filterPanelData = this.state.filterPanelData;\n\n    tierLevelData.forEach((tire) => {\n      return (tire.isChecked = event.target.checked);\n    });\n    filterPanelData.tierLevelData = tierLevelData;\n    filterPanelData.isAllTireChecked = !filterPanelData.isAllTireChecked;\n    this.setState({ filterPanelData });\n  };\n\n  onSelectTireCheckbox = (event) => {\n    let tierLevelData = this.state.filterPanelData.tierLevelData;\n    let filterPanelData = this.state.filterPanelData;\n    let isAllTireChecked = false;\n    let selectionCount = 0;\n    tierLevelData.forEach((tire) => {\n      if (tire.value === event.target.value)\n        tire.isChecked = event.target.checked;\n\n      if (tire.isChecked) {\n        selectionCount++;\n      }\n      isAllTireChecked = selectionCount === tierLevelData.length ? true : false;\n    });\n    filterPanelData.tierLevelData = tierLevelData;\n    filterPanelData.isAllTireChecked = isAllTireChecked;\n    this.setState({ filterPanelData });\n  };\n  onChangeClearedValue = (selectedValue) => {\n    let filterPanelData = this.state.filterPanelData;\n    filterPanelData.selectedClearedValue = selectedValue;\n    this.setState({ filterPanelData });\n  };\n  onChangeCurrencyValue = (selectedValue) => {\n    let filterPanelData = this.state.filterPanelData;\n    filterPanelData.selectedCurrencyValue = selectedValue;\n    this.setState({ filterPanelData });\n  };\n  onChangeCrossMarginEligibleValue = (selectedValue) => {\n    let filterPanelData = this.state.filterPanelData;\n    filterPanelData.selectedCrossMarginValue = selectedValue;\n    this.setState({ filterPanelData });\n  };\n  onChangeFlaggedEditValue = (selectedValue) => {\n    let filterPanelData = this.state.filterPanelData;\n    filterPanelData.selectedFlaggedEditValue = selectedValue;\n    this.setState({ filterPanelData });\n  };\n  onChangeReviewNeededValue = (selectedValue) => {\n    let filterPanelData = this.state.filterPanelData;\n    filterPanelData.selectedreviewNeededValue = selectedValue;\n    this.setState({ filterPanelData });\n  };\n\n  onSelectEditedRecordValue = (e) => {\n    let filterPanelData = this.state.filterPanelData;\n    filterPanelData.editedRecordValue = e.target.value;\n    filterPanelData.isEditedRecordChecked = !filterPanelData.isEditedRecordChecked;\n    this.setState({ filterPanelData });\n  };\n  onClickFiler = () => {\n    let filterPanelData = this.state.filterPanelData;\n    let filterObject = {\n      selectedHistCurrValue: filterPanelData.selectedHistCurrValue,\n      cuspinValue: filterPanelData.cuspinValue,\n      fromDate: filterPanelData.fromDate,\n      toDate: filterPanelData.toDate,\n      isinValue: filterPanelData.isinValue,\n      occSymbolValue: filterPanelData.occSymbolValue,\n      typeData: filterPanelData.typeData,\n      selectedClearedValue: filterPanelData.selectedClearedValue,\n      selectedCrossMarginValue: filterPanelData.selectedCrossMarginValue,\n      selectedCurrencyValue: filterPanelData.selectedCurrencyValue,\n      tierLevelData: filterPanelData.tierLevelData,\n      selectedFlaggedEditValue: filterPanelData.selectedFlaggedEditValue,\n      selectedreviewNeededValue: filterPanelData.selectedreviewNeededValue,\n      isEditedRecordChecked: filterPanelData.isEditedRecordChecked,\n    };\n    alert(JSON.stringify(filterObject));\n  };\n  onClickReset = () => {\n    let filterPanelData = this.state.filterPanelData;\n    let intialFilterPanelState = this.state.intialFilterPanelState;\n    alert(JSON.stringify(intialFilterPanelState));\n    let data = { ...filterPanelData, ...intialFilterPanelState };\n    console.log(\"final object is\", data);\n\n    //this.setState({ filterPanelData: intialFilterPanelState });\n    this.setState({ filterPanelData: data });\n  };\n\n  componentDidMount() {\n    let filterPanelData = this.state.filterPanelData;\n    let filterObject1 = this.state.filterPanelData;\n\n    let filterObject = {\n      selectedHistCurrValue: filterPanelData.selectedHistCurrValue,\n      cuspinValue: filterPanelData.cuspinValue,\n      fromDate: filterPanelData.fromDate,\n      toDate: filterPanelData.toDate,\n      isinValue: filterPanelData.isinValue,\n      occSymbolValue: filterPanelData.occSymbolValue,\n      typeData: filterPanelData.typeData,\n      selectedClearedValue: filterPanelData.selectedClearedValue,\n      selectedCrossMarginValue: filterPanelData.selectedCrossMarginValue,\n      selectedCurrencyValue: filterPanelData.selectedCurrencyValue,\n      tierLevelData: filterPanelData.tierLevelData,\n      selectedFlaggedEditValue: filterPanelData.selectedFlaggedEditValue,\n      selectedreviewNeededValue: filterPanelData.selectedreviewNeededValue,\n      isEditedRecordChecked: filterPanelData.isEditedRecordChecked,\n      editedRecordValue: filterPanelData.editedRecordValue,\n    };\n    let data = { ...filterPanelData, ...filterObject };\n    alert(JSON.stringify(filterObject));\n    this.setState({\n      intialFilterPanelState: data,\n    });\n  }\n\n  render() {\n    let data = this.state;\n    return (\n      <div className=\"mainVS\">\n        <Filterscreen\n          onChangeCuspinValue={(e) => this.onChangeCuspinValue(e)}\n          data={this.state}\n          onClickSuggestionItem={this.onClickSuggestionItem}\n          onChangeHistCurrValue={(e) => this.onChangeHistCurrValue(e)}\n          setFromDate={(e) => this.setFromDate(e)}\n          setToDate={(e) => this.setToDate(e)}\n          onChangeIsinValue={(e) => this.onChangeIsinValue(e)}\n          onClickIsinSuggestionItem={this.onClickIsinSuggestionItem}\n          onChangeOccSymbolValue={(e) => this.onChangeOccSymbolValue(e)}\n          onClickOccSymbolSuggestionItem={this.onClickOccSymbolSuggestionItem}\n          onSelectTypeCheckbox={(e) => this.onSelectTypeCheckbox(e)}\n          onAllTypeChecked={(e) => this.onAllTypeChecked(e)}\n          onSelectTireCheckbox={(e) => this.onSelectTireCheckbox(e)}\n          onAllTireChecked={(e) => this.onAllTireChecked(e)}\n          onChangeCrossMarginEligibleValue={(e) =>\n            this.onChangeCrossMarginEligibleValue(e)\n          }\n          onChangeCurrencyValue={(e) => this.onChangeCurrencyValue(e)}\n          onChangeClearedValue={(e) => this.onChangeClearedValue(e)}\n          onChangeFlaggedEditValue={(e) => this.onChangeFlaggedEditValue(e)}\n          onChangeReviewNeededValue={(e) => this.onChangeReviewNeededValue(e)}\n          onSelectEditedRecordValue={(e) => this.onSelectEditedRecordValue(e)}\n          onClickFiler={this.onClickFiler}\n          onClickReset={this.onClickReset}\n        />\n        <div className=\"mainEdit\">\n          <Mainscreen\n            data={data}\n            onClickPriceRollOverrideButton={this.onClickPriceRollOverrideButton}\n            closePriceRollOverrideModal={this.closePriceRollOverrideModal}\n            onSelectReview={(e) => this.onSelectReview(e)}\n            closeGridMustSelectedModal={this.closeGridMustSelectedModal}\n            closeThresholdModal={this.closeThresholdModal}\n            onClickThresholdButton={this.onClickThresholdButton}\n            onClickSuspendRestartRepoButton={\n              this.onClickSuspendRestartRepoButton\n            }\n            closeSuspendRestartRepoModal={this.closeSuspendRestartRepoModal}\n            closePublishValuedSecuritiesModal={\n              this.closePublishValuedSecuritiesModal\n            }\n            onClickPublishValuedSecuritiesButton={\n              this.onClickPublishValuedSecuritiesButton\n            }\n            onGridReady={this.onGridReady}\n          ></Mainscreen>\n          <Editscreen\n            toggleEditDashboardGrid={this.toggleEditDashboardGrid}\n            data={data}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}