{"ast":null,"code":"var _jsxFileName = \"/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/App.js\";\nimport React, { Component, useReducer } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.scss\";\nimport Filterscreen from \"./components/filterscreen/filterscreen.jsx\";\nimport Mainscreen from \"./components/mainscreen/mainscreen.jsx\";\nimport Editscreen from \"./components/editscreen/editscreen.jsx\";\nimport PriceEditingContext from \"./components/context/proce-editing-context.jsx\";\nimport PriceEditingReducer from \"./reducers/price-editing-reducer.jsx\";\nimport { computeHeadingLevel } from \"@testing-library/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onClickPriceRollOverrideButton = () => {\n      let maintenanceScreenData = this.state.maintenanceScreenData;\n      maintenanceScreenData.isPriceRollOverrideModalOpen = !maintenanceScreenData.isPriceRollOverrideModalOpen;\n      this.setState({\n        maintenanceScreenData\n      });\n    };\n\n    this.closePriceRollOverrideModal = () => {\n      let maintenanceScreenData = this.state.maintenanceScreenData;\n      maintenanceScreenData.isPriceRollOverrideModalOpen = !maintenanceScreenData.isPriceRollOverrideModalOpen;\n      this.setState({\n        maintenanceScreenData\n      });\n    };\n\n    this.onSelectReview = e => {\n      let maintenanceScreenData = this.state.maintenanceScreenData;\n      maintenanceScreenData.selectedReviewValue = e.target.value;\n      this.setState({\n        maintenanceScreenData\n      });\n\n      if (maintenanceScreenData.maintenanceGridData) {\n        maintenanceScreenData.openGridMustSelectedModal = true;\n        this.setState({\n          maintenanceScreenData\n        });\n      }\n    };\n\n    this.closeGridMustSelectedModal = () => {\n      let maintenanceScreenData = this.state.maintenanceScreenData;\n      maintenanceScreenData.openGridMustSelectedModal = false;\n      this.setState({\n        maintenanceScreenData\n      });\n    };\n\n    this.closeThresholdModal = () => {\n      let maintenanceScreenData = this.state.maintenanceScreenData;\n      maintenanceScreenData.isThresholdModalOpen = false;\n      this.setState({\n        maintenanceScreenData\n      });\n    };\n\n    this.onClickThresholdButton = () => {\n      let maintenanceScreenData = this.state.maintenanceScreenData;\n      maintenanceScreenData.isThresholdModalOpen = true;\n      this.setState({\n        maintenanceScreenData\n      });\n    };\n\n    this.onClickSuggestionItem = selectedValue => {\n      alert(selectedValue);\n      let filterPanelData = this.state.filterPanelData;\n      filterPanelData.cuspinValue = selectedValue;\n      this.setState({\n        filterPanelData\n      });\n    };\n\n    this.closeSuspendRestartRepoModal = () => {\n      let maintenanceScreenData = this.state.maintenanceScreenData;\n      maintenanceScreenData.isSuspendRestartRepoModalOpen = false;\n      this.setState({\n        maintenanceScreenData\n      });\n    };\n\n    this.onClickSuspendRestartRepoButton = () => {\n      let maintenanceScreenData = this.state.maintenanceScreenData;\n      maintenanceScreenData.isSuspendRestartRepoModalOpen = true;\n      this.setState({\n        maintenanceScreenData\n      });\n    };\n\n    this.closePublishValuedSecuritiesModal = () => {\n      let maintenanceScreenData = this.state.maintenanceScreenData;\n      maintenanceScreenData.ispublishValuedSecuritiesModalOpen = false;\n      this.setState({\n        maintenanceScreenData\n      });\n    };\n\n    this.onClickSuspendRestartRepoButton = () => {\n      let maintenanceScreenData = this.state.maintenanceScreenData;\n      maintenanceScreenData.ispublishValuedSecuritiesModalOpen = true;\n      this.setState({\n        maintenanceScreenData\n      });\n    };\n\n    this.state = {\n      maintenanceScreenData: {\n        isPriceRollOverrideModalOpen: false,\n        PriceRollOverrideMModalWarningMessage: \"A record must be selected to perform this action\",\n        selectedReviewValue: \"\",\n        maintenanceGridData: [],\n        openGridMustSelectedModal: false,\n        gridMustBePopulateModalWarningMessage: \"Grid must be selected\",\n        isThresholdModalOpen: false,\n        isSuspendRestartRepoModalOpen: false\n      },\n      editDashboardData: {},\n      filterPanelData: {\n        cuspinSearchValue: \"\",\n        cuspinData: [{\n          id: 1,\n          value: \"AA001200\"\n        }, {\n          id: 2,\n          value: \"AA001201\"\n        }, {\n          id: 3,\n          value: \"AA001202\"\n        }, {\n          id: 4,\n          value: \"AA001203\"\n        }, {\n          id: 5,\n          value: \"AB001204\"\n        }, {\n          id: 6,\n          value: \"BB001205\"\n        }, {\n          id: 7,\n          value: \"BA001206\"\n        }, {\n          id: 8,\n          value: \"CC001207\"\n        }, {\n          id: 9,\n          value: \"BC001208\"\n        }, {\n          id: 10,\n          value: \"CA001209\"\n        }],\n        cuspinSuggestionResult: [],\n        cuspinValue: \"\"\n      }\n    };\n    this.onChangeCuspinValue = this.onChangeCuspinValue.bind(this);\n  }\n\n  onChangeCuspinValue(e) {\n    let data = this.state.filterPanelData.cuspinData;\n    let filterPanelData = this.state.filterPanelData;\n    let result = e.target.value && data && data.filter(item => {\n      return item.value.toLowerCase().includes(e.target.value.trim().toLowerCase());\n    });\n    console.log(result);\n    filterPanelData.cuspinSuggestionResult = result;\n    this.setState({\n      filterPanelData\n    });\n  }\n\n  render() {\n    let data = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainVS\",\n      children: [/*#__PURE__*/_jsxDEV(Filterscreen, {\n        onChangeCuspinValue: e => this.onChangeCuspinValue(e),\n        data: this.state,\n        onClickSuggestionItem: this.onClickSuggestionItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainEdit\",\n        children: [/*#__PURE__*/_jsxDEV(Mainscreen, {\n          data: data,\n          onClickPriceRollOverrideButton: this.onClickPriceRollOverrideButton,\n          closePriceRollOverrideModal: this.closePriceRollOverrideModal,\n          onSelectReview: e => this.onSelectReview(e),\n          closeGridMustSelectedModal: this.closeGridMustSelectedModal,\n          closeThresholdModal: this.closeThresholdModal,\n          onClickThresholdButton: this.onClickThresholdButton,\n          onClickSuspendRestartRepoButton: this.onClickSuspendRestartRepoButton,\n          closeSuspendRestartRepoModal: this.closeSuspendRestartRepoModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Editscreen, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/App.js"],"names":["React","Component","useReducer","Filterscreen","Mainscreen","Editscreen","PriceEditingContext","PriceEditingReducer","computeHeadingLevel","App","constructor","props","onClickPriceRollOverrideButton","maintenanceScreenData","state","isPriceRollOverrideModalOpen","setState","closePriceRollOverrideModal","onSelectReview","e","selectedReviewValue","target","value","maintenanceGridData","openGridMustSelectedModal","closeGridMustSelectedModal","closeThresholdModal","isThresholdModalOpen","onClickThresholdButton","onClickSuggestionItem","selectedValue","alert","filterPanelData","cuspinValue","closeSuspendRestartRepoModal","isSuspendRestartRepoModalOpen","onClickSuspendRestartRepoButton","closePublishValuedSecuritiesModal","ispublishValuedSecuritiesModalOpen","PriceRollOverrideMModalWarningMessage","gridMustBePopulateModalWarningMessage","editDashboardData","cuspinSearchValue","cuspinData","id","cuspinSuggestionResult","onChangeCuspinValue","bind","data","result","filter","item","toLowerCase","includes","trim","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component, useReducer } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.scss\";\nimport Filterscreen from \"./components/filterscreen/filterscreen.jsx\";\nimport Mainscreen from \"./components/mainscreen/mainscreen.jsx\";\nimport Editscreen from \"./components/editscreen/editscreen.jsx\";\nimport PriceEditingContext from \"./components/context/proce-editing-context.jsx\";\nimport PriceEditingReducer from \"./reducers/price-editing-reducer.jsx\";\nimport { computeHeadingLevel } from \"@testing-library/react\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      maintenanceScreenData: {\n        isPriceRollOverrideModalOpen: false,\n        PriceRollOverrideMModalWarningMessage:\n          \"A record must be selected to perform this action\",\n        selectedReviewValue: \"\",\n        maintenanceGridData: [],\n        openGridMustSelectedModal: false,\n        gridMustBePopulateModalWarningMessage: \"Grid must be selected\",\n        isThresholdModalOpen: false,\n        isSuspendRestartRepoModalOpen: false,\n      },\n      editDashboardData: {},\n      filterPanelData: {\n        cuspinSearchValue: \"\",\n        cuspinData: [\n          { id: 1, value: \"AA001200\" },\n          { id: 2, value: \"AA001201\" },\n          { id: 3, value: \"AA001202\" },\n          { id: 4, value: \"AA001203\" },\n          { id: 5, value: \"AB001204\" },\n          { id: 6, value: \"BB001205\" },\n          { id: 7, value: \"BA001206\" },\n          { id: 8, value: \"CC001207\" },\n          { id: 9, value: \"BC001208\" },\n          { id: 10, value: \"CA001209\" },\n        ],\n        cuspinSuggestionResult: [],\n        cuspinValue: \"\",\n      },\n    };\n    this.onChangeCuspinValue = this.onChangeCuspinValue.bind(this);\n  }\n  onClickPriceRollOverrideButton = () => {\n    let maintenanceScreenData = this.state.maintenanceScreenData;\n    maintenanceScreenData.isPriceRollOverrideModalOpen = !maintenanceScreenData.isPriceRollOverrideModalOpen;\n    this.setState({\n      maintenanceScreenData,\n    });\n  };\n  closePriceRollOverrideModal = () => {\n    let maintenanceScreenData = this.state.maintenanceScreenData;\n    maintenanceScreenData.isPriceRollOverrideModalOpen = !maintenanceScreenData.isPriceRollOverrideModalOpen;\n    this.setState({\n      maintenanceScreenData,\n    });\n  };\n\n  onChangeCuspinValue(e) {\n    let data = this.state.filterPanelData.cuspinData;\n    let filterPanelData = this.state.filterPanelData;\n\n    let result =\n      e.target.value &&\n      data &&\n      data.filter((item) => {\n        return item.value\n          .toLowerCase()\n          .includes(e.target.value.trim().toLowerCase());\n      });\n    console.log(result);\n    filterPanelData.cuspinSuggestionResult = result;\n    this.setState({\n      filterPanelData,\n    });\n  }\n  onSelectReview = (e) => {\n    let maintenanceScreenData = this.state.maintenanceScreenData;\n    maintenanceScreenData.selectedReviewValue = e.target.value;\n    this.setState({\n      maintenanceScreenData,\n    });\n    if (maintenanceScreenData.maintenanceGridData) {\n      maintenanceScreenData.openGridMustSelectedModal = true;\n      this.setState({\n        maintenanceScreenData,\n      });\n    }\n  };\n  closeGridMustSelectedModal = () => {\n    let maintenanceScreenData = this.state.maintenanceScreenData;\n    maintenanceScreenData.openGridMustSelectedModal = false;\n    this.setState({\n      maintenanceScreenData,\n    });\n  };\n  closeThresholdModal = () => {\n    let maintenanceScreenData = this.state.maintenanceScreenData;\n    maintenanceScreenData.isThresholdModalOpen = false;\n    this.setState({\n      maintenanceScreenData,\n    });\n  };\n  onClickThresholdButton = () => {\n    let maintenanceScreenData = this.state.maintenanceScreenData;\n    maintenanceScreenData.isThresholdModalOpen = true;\n    this.setState({\n      maintenanceScreenData,\n    });\n  };\n  onClickSuggestionItem = (selectedValue) => {\n    alert(selectedValue);\n    let filterPanelData = this.state.filterPanelData;\n    filterPanelData.cuspinValue = selectedValue;\n    this.setState({\n      filterPanelData,\n    });\n  };\n  closeSuspendRestartRepoModal = () => {\n    let maintenanceScreenData = this.state.maintenanceScreenData;\n    maintenanceScreenData.isSuspendRestartRepoModalOpen = false;\n    this.setState({\n      maintenanceScreenData,\n    });\n  };\n  onClickSuspendRestartRepoButton = () => {\n    let maintenanceScreenData = this.state.maintenanceScreenData;\n    maintenanceScreenData.isSuspendRestartRepoModalOpen = true;\n    this.setState({\n      maintenanceScreenData,\n    });\n  };\n\n  closePublishValuedSecuritiesModal = () => {\n    let maintenanceScreenData = this.state.maintenanceScreenData;\n    maintenanceScreenData.ispublishValuedSecuritiesModalOpen = false;\n    this.setState({\n      maintenanceScreenData,\n    });\n  };\n  onClickSuspendRestartRepoButton = () => {\n    let maintenanceScreenData = this.state.maintenanceScreenData;\n    maintenanceScreenData.ispublishValuedSecuritiesModalOpen = true;\n    this.setState({\n      maintenanceScreenData,\n    });\n  };\n  render() {\n    let data = this.state;\n    return (\n      <div className=\"mainVS\">\n        <Filterscreen\n          onChangeCuspinValue={(e) => this.onChangeCuspinValue(e)}\n          data={this.state}\n          onClickSuggestionItem={this.onClickSuggestionItem}\n        />\n        <div className=\"mainEdit\">\n          <Mainscreen\n            data={data}\n            onClickPriceRollOverrideButton={this.onClickPriceRollOverrideButton}\n            closePriceRollOverrideModal={this.closePriceRollOverrideModal}\n            onSelectReview={(e) => this.onSelectReview(e)}\n            closeGridMustSelectedModal={this.closeGridMustSelectedModal}\n            closeThresholdModal={this.closeThresholdModal}\n            onClickThresholdButton={this.onClickThresholdButton}\n            onClickSuspendRestartRepoButton={\n              this.onClickSuspendRestartRepoButton\n            }\n            closeSuspendRestartRepoModal={this.closeSuspendRestartRepoModal}\n          ></Mainscreen>\n          <Editscreen />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}