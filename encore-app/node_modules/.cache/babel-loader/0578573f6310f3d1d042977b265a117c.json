{"ast":null,"code":"var _jsxFileName = \"/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/common/date-range-picker/date-range-picker.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { addDays } from \"date-fns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction duriationOfDates(fromDate, toDate) {\n  const date1 = new Date(fromDate);\n  const date2 = new Date(toDate);\n  const diffTime = Math.abs(date2 - date1);\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n  return diffDays;\n}\n\nfunction getArrayOfDates(fromDate, toDate) {\n  let numberOfDays = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let fromDates = [];\n  let toDates = [];\n\n  if (numberOfDays < 0) {\n    for (let i = 0; i < Math.abs(numberOfDays); i++) {\n      fromDates.push(addDays(fromDate, -i));\n    }\n  } else {\n    let diffDays = duriationOfDates(fromDate, toDate);\n\n    for (let i = 0; i < diffDays; i++) {\n      toDates.push(addDays(fromDate, i));\n    }\n  }\n\n  return numberOfDays < 0 ? fromDates : toDates;\n}\n\nconst Daterangepicker = () => {\n  _s();\n\n  const [fromDate, setStartDate] = useState(new Date());\n  const [toDate, setEndDate] = useState(new Date());\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fromDateLabelAndPickerWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"label\",\n        children: \"From Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"datePickerWrapper\",\n        children: /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: fromDate,\n          onChange: fromDate => setStartDate(fromDate),\n          selectsStart: true,\n          includeDates: getArrayOfDates(fromDate, toDate, -30)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toDateLabelAndPickerWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"label\",\n        children: \"To Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"datePickerWrapper\",\n        children: /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: toDate,\n          onChange: toDate => setEndDate(toDate),\n          selectsEnd: true,\n          includeDates: getArrayOfDates(fromDate, toDate)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Daterangepicker, \"92SxfDNnSVpVO8MdPd5iclLrfqk=\");\n\n_c = Daterangepicker;\nexport default Daterangepicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"Daterangepicker\");","map":{"version":3,"sources":["/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/common/date-range-picker/date-range-picker.jsx"],"names":["React","useState","DatePicker","addDays","duriationOfDates","fromDate","toDate","date1","Date","date2","diffTime","Math","abs","diffDays","ceil","getArrayOfDates","numberOfDays","fromDates","toDates","i","push","Daterangepicker","setStartDate","setEndDate"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { addDays } from \"date-fns\";\n\nfunction duriationOfDates(fromDate, toDate) {\n  const date1 = new Date(fromDate);\n  const date2 = new Date(toDate);\n  const diffTime = Math.abs(date2 - date1);\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n  return diffDays;\n}\nfunction getArrayOfDates(fromDate, toDate, numberOfDays = 0) {\n  let fromDates = [];\n  let toDates = [];\n\n  if (numberOfDays < 0) {\n    for (let i = 0; i < Math.abs(numberOfDays); i++) {\n      fromDates.push(addDays(fromDate, -i));\n    }\n  } else {\n    let diffDays = duriationOfDates(fromDate, toDate);\n    for (let i = 0; i < diffDays; i++) {\n      toDates.push(addDays(fromDate, i));\n    }\n  }\n\n  return numberOfDays < 0 ? fromDates : toDates;\n}\n\nconst Daterangepicker = () => {\n  const [fromDate, setStartDate] = useState(new Date());\n  const [toDate, setEndDate] = useState(new Date());\n\n  return (\n    <>\n      <div className=\"fromDateLabelAndPickerWrapper\">\n        <div className=\"label\">From Date</div>\n        <div className=\"datePickerWrapper\">\n          <DatePicker\n            selected={fromDate}\n            onChange={(fromDate) => setStartDate(fromDate)}\n            selectsStart\n            includeDates={getArrayOfDates(fromDate, toDate, -30)}\n          />\n        </div>\n      </div>\n      <div className=\"toDateLabelAndPickerWrapper\">\n        <div className=\"label\">To Date</div>\n        <div className=\"datePickerWrapper\">\n          <DatePicker\n            selected={toDate}\n            onChange={(toDate) => setEndDate(toDate)}\n            selectsEnd\n            includeDates={getArrayOfDates(fromDate, toDate)}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\nexport default Daterangepicker;\n"]},"metadata":{},"sourceType":"module"}