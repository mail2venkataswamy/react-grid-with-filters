{"ast":null,"code":"var _jsxFileName = \"/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/Apptest.jsx\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport CheckboxGroup from \"react-checkbox-group\";\nimport \"./Apptest.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CheckBox = props => {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onClick: props.handleCheckChieldElement,\n      type: \"checkbox\",\n      checked: props.isChecked,\n      value: props.value\n    }, props.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), \" \", props.value]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = CheckBox;\n\nclass Apptest extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAllChecked = event => {\n      let fruites = this.state.fruites;\n      let isAllChecked = this.state.isAllChecked;\n      fruites.forEach(fruite => {\n        return fruite.isChecked = event.target.checked;\n      });\n      this.setState({\n        fruites: fruites,\n        isAllChecked: !isAllChecked\n      });\n    };\n\n    this.handleCheckChieldElement = event => {\n      let fruites = this.state.fruites;\n      let isAllChecked = false;\n      let selectionCount;\n      fruites.forEach(fruite => {\n        if (fruite.value === event.target.value) fruite.isChecked = event.target.checked;\n\n        if (fruite.isChecked === true) {\n          selectionCount++;\n        }\n\n        isAllChecked = selectionCount === fruites.length ? true : false;\n      });\n      this.setState({\n        fruites: fruites,\n        isAllChecked: isAllChecked\n      });\n    };\n\n    this.state = {\n      isAllChecked: false,\n      fruites: [{\n        id: 1,\n        value: \"banana\",\n        isChecked: false\n      }, {\n        id: 2,\n        value: \"apple\",\n        isChecked: false\n      }, {\n        id: 3,\n        value: \"mango\",\n        isChecked: false\n      }, {\n        id: 4,\n        value: \"grap\",\n        isChecked: false\n      }]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Check and Uncheck All Example \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onClick: this.handleAllChecked,\n        value: \"checkedall\",\n        checked: this.state.isAllChecked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), \" \", \"Check / Uncheck All\", /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.fruites.map(fruite => {\n          return /*#__PURE__*/_jsxDEV(CheckBox, {\n            handleCheckChieldElement: this.handleCheckChieldElement,\n            ...fruite\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Apptest;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckBox\");","map":{"version":3,"sources":["/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/Apptest.jsx"],"names":["React","Component","useState","useEffect","CheckboxGroup","CheckBox","props","handleCheckChieldElement","isChecked","value","id","Apptest","constructor","handleAllChecked","event","fruites","state","isAllChecked","forEach","fruite","target","checked","setState","selectionCount","length","render","map"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport CheckboxGroup from \"react-checkbox-group\";\n\nimport \"./Apptest.scss\";\n\nexport const CheckBox = (props) => {\n  return (\n    <li>\n      <input\n        key={props.id}\n        onClick={props.handleCheckChieldElement}\n        type=\"checkbox\"\n        checked={props.isChecked}\n        value={props.value}\n      />{\" \"}\n      {props.value}\n    </li>\n  );\n};\n\nclass Apptest extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAllChecked: false,\n      fruites: [\n        { id: 1, value: \"banana\", isChecked: false },\n        { id: 2, value: \"apple\", isChecked: false },\n        { id: 3, value: \"mango\", isChecked: false },\n        { id: 4, value: \"grap\", isChecked: false },\n      ],\n    };\n  }\n\n  handleAllChecked = (event) => {\n    let fruites = this.state.fruites;\n    let isAllChecked = this.state.isAllChecked;\n    fruites.forEach((fruite) => {\n      return (fruite.isChecked = event.target.checked);\n    });\n    this.setState({ fruites: fruites, isAllChecked: !isAllChecked });\n  };\n\n  handleCheckChieldElement = (event) => {\n    let fruites = this.state.fruites;\n    let isAllChecked = false;\n    let selectionCount;\n    fruites.forEach((fruite) => {\n      if (fruite.value === event.target.value)\n        fruite.isChecked = event.target.checked;\n      if (fruite.isChecked === true) {\n        selectionCount++;\n      }\n      isAllChecked = selectionCount === fruites.length ? true : false;\n    });\n\n    this.setState({ fruites: fruites, isAllChecked: isAllChecked });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1> Check and Uncheck All Example </h1>\n        <input\n          type=\"checkbox\"\n          onClick={this.handleAllChecked}\n          value=\"checkedall\"\n          checked={this.state.isAllChecked}\n        />{\" \"}\n        Check / Uncheck All\n        <ul>\n          {this.state.fruites.map((fruite) => {\n            return (\n              <CheckBox\n                handleCheckChieldElement={this.handleCheckChieldElement}\n                {...fruite}\n              />\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Apptest;\n"]},"metadata":{},"sourceType":"module"}