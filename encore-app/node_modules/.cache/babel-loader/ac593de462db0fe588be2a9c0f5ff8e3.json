{"ast":null,"code":"var _jsxFileName = \"/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/Apptest.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport CheckboxGroup from \"react-checkbox-group\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Apptest = () => {\n  _s();\n\n  // Initialize the checked values\n  const [fruits, setFruits] = useState([\"apple\", \"watermelon\"]);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setFruits([\"apple\", \"orange\"]);\n    }, 5000);\n    return () => clearTimeout(timer);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CheckboxGroup, {\n    name: \"fruits\",\n    value: fruits,\n    onChange: setFruits,\n    children: Checkbox => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          value: \"apple\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), \" Apple\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          value: \"orange\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), \" Orange\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          value: \"watermelon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), \" Watermelon\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Apptest, \"4SwcokgoSE0W7kgP6nOROwv9zYw=\");\n\n_c = Apptest;\nexport default Apptest;\n\nvar _c;\n\n$RefreshReg$(_c, \"Apptest\");","map":{"version":3,"sources":["/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/Apptest.jsx"],"names":["React","useState","useEffect","CheckboxGroup","Apptest","fruits","setFruits","timer","setTimeout","clearTimeout","Checkbox"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,sBAA1B;;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,CAAC,OAAD,EAAU,YAAV,CAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC7BF,MAAAA,SAAS,CAAC,CAAC,OAAD,EAAU,QAAV,CAAD,CAAT;AACD,KAFuB,EAErB,IAFqB,CAAxB;AAIA,WAAO,MAAMG,YAAY,CAACF,KAAD,CAAzB;AACD,GANQ,EAMN,EANM,CAAT;AAQA,sBACE,QAAC,aAAD;AAAe,IAAA,IAAI,EAAC,QAApB;AAA6B,IAAA,KAAK,EAAEF,MAApC;AAA4C,IAAA,QAAQ,EAAEC,SAAtD;AAAA,cACII,QAAD,iBACC;AAAA,8BACE;AAAA,gCACE,QAAC,QAAD;AAAU,UAAA,KAAK,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,gCACE,QAAC,QAAD;AAAU,UAAA,KAAK,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAA,gCACE,QAAC,QAAD;AAAU,UAAA,KAAK,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA7BD;;GAAMN,O;;KAAAA,O;AA+BN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport CheckboxGroup from \"react-checkbox-group\";\n\nconst Apptest = () => {\n  // Initialize the checked values\n  const [fruits, setFruits] = useState([\"apple\", \"watermelon\"]);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setFruits([\"apple\", \"orange\"]);\n    }, 5000);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  return (\n    <CheckboxGroup name=\"fruits\" value={fruits} onChange={setFruits}>\n      {(Checkbox) => (\n        <>\n          <label>\n            <Checkbox value=\"apple\" /> Apple\n          </label>\n          <label>\n            <Checkbox value=\"orange\" /> Orange\n          </label>\n          <label>\n            <Checkbox value=\"watermelon\" /> Watermelon\n          </label>\n        </>\n      )}\n    </CheckboxGroup>\n  );\n};\n\nexport default Apptest;\n"]},"metadata":{},"sourceType":"module"}