[{"/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/index.js":"1","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/reportWebVitals.js":"2","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/App.js":"3","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/reducers/price-editing-reducer.jsx":"4","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/filterscreen/filterscreen.jsx":"5","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/mainscreen/mainscreen.jsx":"6","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/context/proce-editing-context.jsx":"7","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/editscreen/editscreen.jsx":"8","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/filterscreen/product-info/product-info.jsx":"9","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/filterscreen/activity-date-range/activity-date-range.jsx":"10","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/filterscreen/flags-status/flags-status.jsx":"11","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/filterscreen/filter-and-reset/filter-and-reset.jsx":"12","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/mainscreen/maintenance-headers/maintenance-headers.jsx":"13","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/editscreen/edit-dashboard-grid/edit-dashboard-grid.jsx":"14","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/mainscreen/maintenance-grid/maintenance-grid.jsx":"15","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/filterscreen/input-suggestions/input-suggestions.jsx":"16","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/common/simple-dropdown/dropdown.jsx":"17","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/common/datepicker/datepicker.jsx":"18","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/common/button/button.jsx":"19","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/common/select/select.jsx":"20","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/common/date-range-picker/date-range-picker.jsx":"21","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/common/modal/modal.jsx":"22","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/common/modal/warning/warning-modal.jsx":"23","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/common/suggestions/suggestions.jsx":"24","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/mainscreen/threshold/threshold.jsx":"25","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/mainscreen/threshold/threshold-grid/threshold-grid.jsx":"26","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/mainscreen/suspend-restart-repository/suspend-restart-repo-modal.jsx":"27","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/mainscreen/suspend-restart-repository/suspend-restart-grid/suspend-restart-grid.jsx":"28","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/mainscreen/publish-valued-securities/publish-valued-securities.jsx":"29","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/Apptest.jsx":"30","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/common/select/simple-select.jsx":"31","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/common/ag-grid/ag-grid.jsx":"32","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/common/type/type.jsx":"33","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/common/tier-level/tier-level.jsx":"34","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/common/check-box/check-box.jsx":"35"},{"size":537,"mtime":1636075930743,"results":"36","hashOfConfig":"37"},{"size":362,"mtime":1635306790797,"results":"38","hashOfConfig":"37"},{"size":21078,"mtime":1636446000140,"results":"39","hashOfConfig":"37"},{"size":227,"mtime":1635388531355,"results":"40","hashOfConfig":"37"},{"size":2118,"mtime":1636434307318,"results":"41","hashOfConfig":"37"},{"size":1829,"mtime":1636445630001,"results":"42","hashOfConfig":"37"},{"size":118,"mtime":1635393716146,"results":"43","hashOfConfig":"37"},{"size":676,"mtime":1635998410887,"results":"44","hashOfConfig":"37"},{"size":4597,"mtime":1636429604435,"results":"45","hashOfConfig":"37"},{"size":1531,"mtime":1636433637603,"results":"46","hashOfConfig":"37"},{"size":1561,"mtime":1636431288706,"results":"47","hashOfConfig":"37"},{"size":589,"mtime":1636434211048,"results":"48","hashOfConfig":"37"},{"size":3849,"mtime":1635925502796,"results":"49","hashOfConfig":"37"},{"size":2511,"mtime":1636403093386,"results":"50","hashOfConfig":"37"},{"size":3292,"mtime":1636447995110,"results":"51","hashOfConfig":"37"},{"size":475,"mtime":1636414610721,"results":"52","hashOfConfig":"37"},{"size":462,"mtime":1636428679099,"results":"53","hashOfConfig":"37"},{"size":287,"mtime":1635315170564,"results":"54","hashOfConfig":"37"},{"size":244,"mtime":1635532221659,"results":"55","hashOfConfig":"37"},{"size":461,"mtime":1635801315964,"results":"56","hashOfConfig":"37"},{"size":1849,"mtime":1636413676149,"results":"57","hashOfConfig":"37"},{"size":875,"mtime":1635870958578,"results":"58","hashOfConfig":"37"},{"size":1305,"mtime":1635483553167,"results":"59","hashOfConfig":"37"},{"size":562,"mtime":1636415218232,"results":"60","hashOfConfig":"37"},{"size":1690,"mtime":1635915495577,"results":"61","hashOfConfig":"37"},{"size":964,"mtime":1636402853892,"results":"62","hashOfConfig":"37"},{"size":3127,"mtime":1636403011858,"results":"63","hashOfConfig":"37"},{"size":1000,"mtime":1636402791686,"results":"64","hashOfConfig":"37"},{"size":2299,"mtime":1636403047104,"results":"65","hashOfConfig":"37"},{"size":2195,"mtime":1636071942150,"results":"66","hashOfConfig":"37"},{"size":312,"mtime":1636408072913,"results":"67","hashOfConfig":"37"},{"size":870,"mtime":1636448022329,"results":"68","hashOfConfig":"37"},{"size":3315,"mtime":1635970205904,"results":"69","hashOfConfig":"37"},{"size":427,"mtime":1635528656498,"results":"70","hashOfConfig":"37"},{"size":788,"mtime":1636424688392,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},"srx12v",{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"77"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"77"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"77"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"77"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"135","usedDeprecatedRules":"77"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"145"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/index.js",["160"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Apptest from \"./Apptest\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App></App>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/reportWebVitals.js",[],["161","162"],"/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/App.js",["163","164","165","166","167","168","169"],"import React, { Component, useReducer } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.scss\";\nimport Filterscreen from \"./components/filterscreen/filterscreen.jsx\";\nimport Mainscreen from \"./components/mainscreen/mainscreen.jsx\";\nimport Editscreen from \"./components/editscreen/editscreen.jsx\";\nimport PriceEditingContext from \"./components/context/proce-editing-context.jsx\";\nimport PriceEditingReducer from \"./reducers/price-editing-reducer.jsx\";\nimport { computeHeadingLevel } from \"@testing-library/react\";\nimport _ from \"lodash\";\n\nconst getCurrentDateTime = () => {\n  let currentdate = new Date();\n  let datetime =\n    \" \" +\n    currentdate.getDate() +\n    \"/\" +\n    (currentdate.getMonth() + 1) +\n    \"/\" +\n    currentdate.getFullYear();\n  return datetime;\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      intialFilterPanelState: {},\n      maintenanceScreenData: {\n        isPriceRollOverrideModalOpen: false,\n        PriceRollOverrideMModalWarningMessage:\n          \"A record must be selected to perform this action\",\n        selectedReviewValue: \"\",\n        maintenanceGridData: [],\n        openGridMustSelectedModal: false,\n        gridMustBePopulateModalWarningMessage: \"Grid must be selected\",\n        isThresholdModalOpen: false,\n        isSuspendRestartRepoModalOpen: false,\n        isPublishValuedSecuritiesModalOpen: false,\n        matenanceDataLastPublishDate: getCurrentDateTime(),\n      },\n      editDashboardData: { showEditDashboardGrid: true },\n      filterPanelData: {\n        cuspinSearchValue: \"\",\n        cuspinData: [\n          { id: 1, value: \"AA001200\" },\n          { id: 2, value: \"AA001201\" },\n          { id: 3, value: \"AA001202\" },\n          { id: 4, value: \"AA001203\" },\n          { id: 5, value: \"AB001204\" },\n          { id: 6, value: \"BB001205\" },\n          { id: 7, value: \"BA001206\" },\n          { id: 8, value: \"CC001207\" },\n          { id: 9, value: \"BC001208\" },\n          { id: 10, value: \"CA001209\" },\n        ],\n        cuspinSuggestionResult: [],\n        cuspinValue: \"\",\n        currHistOptions: [\n          { label: \"CURRENT\", value: \"Current\" },\n          { label: \"HISTORICAL\", value: \"Historical\" },\n        ],\n        selectedHistCurrValue: { label: \"CURRENT\", value: \"Current\" },\n        fromDate: new Date(),\n        toDate: new Date(),\n        isinData: [\n          { id: 1, value: \"AA001200\" },\n          { id: 2, value: \"AA001201\" },\n          { id: 3, value: \"AA001202\" },\n          { id: 4, value: \"AA001203\" },\n          { id: 5, value: \"AB001204\" },\n          { id: 6, value: \"BB001205\" },\n          { id: 7, value: \"BA001206\" },\n          { id: 8, value: \"CC001207\" },\n          { id: 9, value: \"BC001208\" },\n          { id: 10, value: \"CA001209\" },\n        ],\n        isinSuggestionResult: [],\n        isinValue: \"\",\n        occSymbolData: [\n          { id: 1, value: \"AA001200\" },\n          { id: 2, value: \"AA001201\" },\n          { id: 3, value: \"AA001202\" },\n          { id: 4, value: \"AA001203\" },\n          { id: 5, value: \"AB001204\" },\n          { id: 6, value: \"BB001205\" },\n          { id: 7, value: \"BA001206\" },\n          { id: 8, value: \"CC001207\" },\n          { id: 9, value: \"BC001208\" },\n          { id: 10, value: \"CA001209\" },\n        ],\n        occSymbolSuggestionResult: [],\n        occSymbolValue: \"\",\n        isAllTypeChecked: false,\n        typeData: [\n          { label: \"Common Stock\", value: \"commonStock\", isChecked: false },\n          {\n            label: \"Preffered Stock\",\n            value: \"prefferedStock\",\n            isChecked: false,\n          },\n          { label: \"Index\", value: \"index\", isChecked: false },\n          { label: \"Corporate Debt\", value: \"corporateDebt\", isChecked: false },\n          { label: \"FMS\", value: \"fms\", isChecked: false },\n        ],\n        selectClearedOptions: [\n          { label: \"BOTH\", value: \"ClearedAndNonCleared\" },\n          { label: \"Cleared\", value: \"Cleared\" },\n          { label: \"Non Cleared\", value: \"Non Cleared\" },\n        ],\n        selectedClearedValue: { label: \"BOTH\", value: \"ClearedAndNonCleared\" },\n        selectCrossMarginOptions: [\n          { label: \"BOTH\", value: \"CrossMarginAndNonCrossMragin\" },\n          { label: \"Cross Margin Eligible\", value: \"CrossMargin\" },\n          { label: \"Non Cross Margin Eligible\", value: \"NonCrossMargin\" },\n        ],\n        selectedCrossMarginValue: {\n          label: \"BOTH\",\n          value: \"CrossMarginAndNonCrossMragin\",\n        },\n        selectCurrencyOptions: [\n          { label: \"ALL\", value: \"All\" },\n          { label: \"USD\", value: \"USD\" },\n          { label: \"AUD\", value: \"Aud\" },\n          { label: \"CAD\", value: \"Cad\" },\n        ],\n        selectedCurrencyValue: { label: \"USD\", value: \"USD\" },\n        tierLevelData: [\n          { label: \"1\", value: \"one\", isChecked: false },\n          { label: \"2\", value: \"two\", isChecked: false },\n          { label: \"3\", value: \"three\", isChecked: false },\n          { label: \"4\", value: \"four\", isChecked: false },\n        ],\n        isAllTireChecked: false,\n        flaggedEditOptions: [\n          {\n            label: \"Final - Large Difference Vs Vender\",\n            value: \"Final - Large Difference Vs Vender\",\n          },\n          {\n            label: \"Final - Large varience Vs previous\",\n            value: \"Final - Large varience Vs previous\",\n          },\n          {\n            label: \"Final - Missing or Zero Final Price\",\n            value: \"Final - Missing or Zero Final Price\",\n          },\n        ],\n        selectedFlaggedEditValue: {\n          label: \"Final - Large Difference Vs Vender\",\n          value: \"Final - Large Difference Vs Vender\",\n        },\n        reviewNeededOptions: [\n          {\n            label: \"Final - Large Difference Vs Vender\",\n            value: \"Final - Large Difference Vs Vender\",\n          },\n          {\n            label: \"Final - Large varience Vs previous\",\n            value: \"Final - Large varience Vs previous\",\n          },\n          {\n            label: \"Final - Missing or Zero Final Price\",\n            value: \"Final - Missing or Zero Final Price\",\n          },\n        ],\n        selectedreviewNeededValue: {\n          label: \"Final - Large Difference Vs Vender\",\n          value: \"Final - Large Difference Vs Vender\",\n        },\n        isEditedRecordChecked: false,\n        editedRecordValue: \"\",\n      },\n    };\n\n    this.onChangeCuspinValue = this.onChangeCuspinValue.bind(this);\n  }\n\n  onClickPriceRollOverrideButton = () => {\n    let maintenanceScreenData = this.state.maintenanceScreenData;\n    maintenanceScreenData.isPriceRollOverrideModalOpen = !maintenanceScreenData.isPriceRollOverrideModalOpen;\n    this.setState({\n      maintenanceScreenData,\n    });\n  };\n  closePriceRollOverrideModal = () => {\n    let maintenanceScreenData = this.state.maintenanceScreenData;\n    maintenanceScreenData.isPriceRollOverrideModalOpen = !maintenanceScreenData.isPriceRollOverrideModalOpen;\n    this.setState({\n      maintenanceScreenData,\n    });\n  };\n\n  onChangeCuspinValue(e) {\n    let data = this.state.filterPanelData.cuspinData;\n    let filterPanelData = this.state.filterPanelData;\n\n    let result =\n      e.target.value &&\n      data &&\n      data.filter((item) => {\n        return item.value\n          .toLowerCase()\n          .includes(e.target.value.trim().toLowerCase());\n      });\n    console.log(result);\n    filterPanelData.cuspinSuggestionResult = result;\n    this.setState({\n      filterPanelData,\n    });\n  }\n  onSelectReview = (e) => {\n    let maintenanceScreenData = this.state.maintenanceScreenData;\n    maintenanceScreenData.selectedReviewValue = e.target.value;\n    this.setState({\n      maintenanceScreenData,\n    });\n    if (maintenanceScreenData.maintenanceGridData) {\n      maintenanceScreenData.openGridMustSelectedModal = true;\n      this.setState({\n        maintenanceScreenData,\n      });\n    }\n  };\n  closeGridMustSelectedModal = () => {\n    let maintenanceScreenData = this.state.maintenanceScreenData;\n    maintenanceScreenData.openGridMustSelectedModal = false;\n    this.setState({\n      maintenanceScreenData,\n    });\n  };\n  closeThresholdModal = () => {\n    let maintenanceScreenData = this.state.maintenanceScreenData;\n    maintenanceScreenData.isThresholdModalOpen = false;\n    this.setState({\n      maintenanceScreenData,\n    });\n  };\n  onClickThresholdButton = () => {\n    let maintenanceScreenData = this.state.maintenanceScreenData;\n    maintenanceScreenData.isThresholdModalOpen = true;\n    this.setState({\n      maintenanceScreenData,\n    });\n  };\n  onClickSuggestionItem = (selectedValue) => {\n    let filterPanelData = this.state.filterPanelData;\n    filterPanelData.cuspinValue = selectedValue;\n    this.setState({\n      filterPanelData,\n    });\n  };\n  closeSuspendRestartRepoModal = () => {\n    let maintenanceScreenData = this.state.maintenanceScreenData;\n    maintenanceScreenData.isSuspendRestartRepoModalOpen = false;\n    this.setState({\n      maintenanceScreenData,\n    });\n  };\n  onClickSuspendRestartRepoButton = () => {\n    let maintenanceScreenData = this.state.maintenanceScreenData;\n    maintenanceScreenData.isSuspendRestartRepoModalOpen = true;\n    this.setState({\n      maintenanceScreenData,\n    });\n  };\n\n  closePublishValuedSecuritiesModal = () => {\n    let maintenanceScreenData = this.state.maintenanceScreenData;\n    maintenanceScreenData.isPublishValuedSecuritiesModalOpen = false;\n    this.setState({\n      maintenanceScreenData,\n    });\n  };\n  onClickPublishValuedSecuritiesButton = () => {\n    let maintenanceScreenData = this.state.maintenanceScreenData;\n    maintenanceScreenData.isPublishValuedSecuritiesModalOpen = true;\n    this.setState({\n      maintenanceScreenData,\n    });\n  };\n  toggleEditDashboardGrid = () => {\n    let editDashboardData = this.state.editDashboardData;\n    editDashboardData.showEditDashboardGrid = !this.state.editDashboardData\n      .showEditDashboardGrid;\n    this.setState({\n      editDashboardData,\n    });\n    if (editDashboardData.showEditDashboardGrid) {\n      document\n        .getElementById(\"toggle\")\n        .setAttribute(\"style\", \"transform:rotate(180deg);left:4px;top:-3px\");\n    } else {\n      document\n        .getElementById(\"toggle\")\n        .setAttribute(\"style\", \"transform:rotate(360deg)\");\n    }\n  };\n  onChangeHistCurrValue = (e) => {\n    let filterPanelData = this.state.filterPanelData;\n    filterPanelData.selectedHistCurrValue = e.target.value;\n    this.setState({\n      filterPanelData,\n    });\n  };\n  setFromDate = (date) => {\n    let filterPanelData = this.state.filterPanelData;\n    console.log(filterPanelData.fromDate);\n    filterPanelData.fromDate = date;\n    this.setState({\n      filterPanelData,\n    });\n  };\n  setToDate = (date) => {\n    let filterPanelData = this.state.filterPanelData;\n    console.log(filterPanelData.toDate);\n    filterPanelData.toDate = date;\n    this.setState({\n      filterPanelData,\n    });\n  };\n  onClickIsinSuggestionItem = (selectedValue) => {\n    let filterPanelData = this.state.filterPanelData;\n    filterPanelData.isinValue = selectedValue;\n    this.setState({\n      filterPanelData,\n    });\n  };\n  onClickOccSymbolSuggestionItem = (selectedValue) => {\n    let filterPanelData = this.state.filterPanelData;\n    filterPanelData.occSymbolValue = selectedValue;\n    this.setState({\n      filterPanelData,\n    });\n  };\n  onChangeIsinValue(e) {\n    let data = this.state.filterPanelData.isinData;\n    let filterPanelData = this.state.filterPanelData;\n\n    let result =\n      e.target.value &&\n      data &&\n      data.filter((item) => {\n        return item.value\n          .toLowerCase()\n          .includes(e.target.value.trim().toLowerCase());\n      });\n    console.log(result);\n    filterPanelData.isinSuggestionResult = result;\n    this.setState({\n      filterPanelData,\n    });\n  }\n  onChangeOccSymbolValue(e) {\n    let data = this.state.filterPanelData.occSymbolData;\n    let filterPanelData = this.state.filterPanelData;\n\n    let result =\n      e.target.value &&\n      data &&\n      data.filter((item) => {\n        return item.value\n          .toLowerCase()\n          .includes(e.target.value.trim().toLowerCase());\n      });\n    console.log(result);\n    filterPanelData.occSymbolSuggestionResult = result;\n    this.setState({\n      filterPanelData,\n    });\n  }\n  onAllTypeChecked = (event) => {\n    let typeData = this.state.filterPanelData.typeData;\n    let filterPanelData = this.state.filterPanelData;\n\n    typeData.forEach((type) => {\n      return (type.isChecked = event.target.checked);\n    });\n    filterPanelData.typeData = typeData;\n    filterPanelData.isAllTypeChecked = !filterPanelData.isAllTypeChecked;\n    this.setState({ filterPanelData });\n  };\n\n  onSelectTypeCheckbox = (event) => {\n    let typeData = this.state.filterPanelData.typeData;\n    let filterPanelData = this.state.filterPanelData;\n    let isAllTypeChecked = false;\n    let selectionCount = 0;\n    typeData.forEach((type) => {\n      if (type.value === event.target.value)\n        type.isChecked = event.target.checked;\n\n      if (type.isChecked) {\n        selectionCount++;\n      }\n      isAllTypeChecked = selectionCount === typeData.length ? true : false;\n    });\n    filterPanelData.typeData = typeData;\n    filterPanelData.isAllTypeChecked = isAllTypeChecked;\n    this.setState({ filterPanelData });\n  };\n  onAllTireChecked = (event) => {\n    let tierLevelData = this.state.filterPanelData.tierLevelData;\n    let filterPanelData = this.state.filterPanelData;\n\n    tierLevelData.forEach((tire) => {\n      return (tire.isChecked = event.target.checked);\n    });\n    filterPanelData.tierLevelData = tierLevelData;\n    filterPanelData.isAllTireChecked = !filterPanelData.isAllTireChecked;\n    this.setState({ filterPanelData });\n  };\n\n  onSelectTireCheckbox = (event) => {\n    let tierLevelData = this.state.filterPanelData.tierLevelData;\n    let filterPanelData = this.state.filterPanelData;\n    let isAllTireChecked = false;\n    let selectionCount = 0;\n    tierLevelData.forEach((tire) => {\n      if (tire.value === event.target.value)\n        tire.isChecked = event.target.checked;\n\n      if (tire.isChecked) {\n        selectionCount++;\n      }\n      isAllTireChecked = selectionCount === tierLevelData.length ? true : false;\n    });\n    filterPanelData.tierLevelData = tierLevelData;\n    filterPanelData.isAllTireChecked = isAllTireChecked;\n    this.setState({ filterPanelData });\n  };\n  onChangeClearedValue = (selectedValue) => {\n    let filterPanelData = this.state.filterPanelData;\n    filterPanelData.selectedClearedValue = selectedValue;\n    this.setState({ filterPanelData });\n  };\n  onChangeCurrencyValue = (selectedValue) => {\n    let filterPanelData = this.state.filterPanelData;\n    filterPanelData.selectedCurrencyValue = selectedValue;\n    this.setState({ filterPanelData });\n  };\n  onChangeCrossMarginEligibleValue = (selectedValue) => {\n    let filterPanelData = this.state.filterPanelData;\n    filterPanelData.selectedCrossMarginValue = selectedValue;\n    this.setState({ filterPanelData });\n  };\n  onChangeFlaggedEditValue = (selectedValue) => {\n    let filterPanelData = this.state.filterPanelData;\n    filterPanelData.selectedFlaggedEditValue = selectedValue;\n    this.setState({ filterPanelData });\n  };\n  onChangeReviewNeededValue = (selectedValue) => {\n    let filterPanelData = this.state.filterPanelData;\n    filterPanelData.selectedreviewNeededValue = selectedValue;\n    this.setState({ filterPanelData });\n  };\n\n  onSelectEditedRecordValue = (e) => {\n    let filterPanelData = this.state.filterPanelData;\n    filterPanelData.editedRecordValue = e.target.value;\n    filterPanelData.isEditedRecordChecked = !filterPanelData.isEditedRecordChecked;\n    this.setState({ filterPanelData });\n  };\n  onClickFiler = () => {\n    let filterPanelData = this.state.filterPanelData;\n    let filterObject = {\n      selectedHistCurrValue: filterPanelData.selectedHistCurrValue,\n      cuspinValue: filterPanelData.cuspinValue,\n      fromDate: filterPanelData.fromDate,\n      toDate: filterPanelData.toDate,\n      isinValue: filterPanelData.isinValue,\n      occSymbolValue: filterPanelData.occSymbolValue,\n      typeData: filterPanelData.typeData,\n      selectedClearedValue: filterPanelData.selectedClearedValue,\n      selectedCrossMarginValue: filterPanelData.selectedCrossMarginValue,\n      selectedCurrencyValue: filterPanelData.selectedCurrencyValue,\n      tierLevelData: filterPanelData.tierLevelData,\n      selectedFlaggedEditValue: filterPanelData.selectedFlaggedEditValue,\n      selectedreviewNeededValue: filterPanelData.selectedreviewNeededValue,\n      isEditedRecordChecked: filterPanelData.isEditedRecordChecked,\n    };\n    alert(JSON.stringify(filterObject));\n  };\n  onClickReset = () => {\n    let filterPanelData = this.state.filterPanelData;\n    let intialFilterPanelState = this.state.intialFilterPanelState;\n    alert(JSON.stringify(intialFilterPanelState));\n    let data = { ...filterPanelData, ...intialFilterPanelState };\n    console.log(\"final object is\", data);\n\n    //this.setState({ filterPanelData: intialFilterPanelState });\n    this.setState({ filterPanelData: data });\n  };\n\n  componentDidMount() {\n    let filterPanelData = this.state.filterPanelData;\n    let filterObject1 = this.state.filterPanelData;\n\n    let filterObject = {\n      selectedHistCurrValue: filterPanelData.selectedHistCurrValue,\n      cuspinValue: filterPanelData.cuspinValue,\n      fromDate: filterPanelData.fromDate,\n      toDate: filterPanelData.toDate,\n      isinValue: filterPanelData.isinValue,\n      occSymbolValue: filterPanelData.occSymbolValue,\n      typeData: filterPanelData.typeData,\n      selectedClearedValue: filterPanelData.selectedClearedValue,\n      selectedCrossMarginValue: filterPanelData.selectedCrossMarginValue,\n      selectedCurrencyValue: filterPanelData.selectedCurrencyValue,\n      tierLevelData: filterPanelData.tierLevelData,\n      selectedFlaggedEditValue: filterPanelData.selectedFlaggedEditValue,\n      selectedreviewNeededValue: filterPanelData.selectedreviewNeededValue,\n      isEditedRecordChecked: filterPanelData.isEditedRecordChecked,\n      editedRecordValue: filterPanelData.editedRecordValue,\n    };\n    let data = { ...filterPanelData, ...filterObject };\n    alert(JSON.stringify(filterObject));\n    this.setState({\n      intialFilterPanelState: data,\n    });\n  }\n\n  render() {\n    let data = this.state;\n    return (\n      <div className=\"mainVS\">\n        <Filterscreen\n          onChangeCuspinValue={(e) => this.onChangeCuspinValue(e)}\n          data={this.state}\n          onClickSuggestionItem={this.onClickSuggestionItem}\n          onChangeHistCurrValue={(e) => this.onChangeHistCurrValue(e)}\n          setFromDate={(e) => this.setFromDate(e)}\n          setToDate={(e) => this.setToDate(e)}\n          onChangeIsinValue={(e) => this.onChangeIsinValue(e)}\n          onClickIsinSuggestionItem={this.onClickIsinSuggestionItem}\n          onChangeOccSymbolValue={(e) => this.onChangeOccSymbolValue(e)}\n          onClickOccSymbolSuggestionItem={this.onClickOccSymbolSuggestionItem}\n          onSelectTypeCheckbox={(e) => this.onSelectTypeCheckbox(e)}\n          onAllTypeChecked={(e) => this.onAllTypeChecked(e)}\n          onSelectTireCheckbox={(e) => this.onSelectTireCheckbox(e)}\n          onAllTireChecked={(e) => this.onAllTireChecked(e)}\n          onChangeCrossMarginEligibleValue={(e) =>\n            this.onChangeCrossMarginEligibleValue(e)\n          }\n          onChangeCurrencyValue={(e) => this.onChangeCurrencyValue(e)}\n          onChangeClearedValue={(e) => this.onChangeClearedValue(e)}\n          onChangeFlaggedEditValue={(e) => this.onChangeFlaggedEditValue(e)}\n          onChangeReviewNeededValue={(e) => this.onChangeReviewNeededValue(e)}\n          onSelectEditedRecordValue={(e) => this.onSelectEditedRecordValue(e)}\n          onClickFiler={this.onClickFiler}\n          onClickReset={this.onClickReset}\n        />\n        <div className=\"mainEdit\">\n          <Mainscreen\n            data={data}\n            onClickPriceRollOverrideButton={this.onClickPriceRollOverrideButton}\n            closePriceRollOverrideModal={this.closePriceRollOverrideModal}\n            onSelectReview={(e) => this.onSelectReview(e)}\n            closeGridMustSelectedModal={this.closeGridMustSelectedModal}\n            closeThresholdModal={this.closeThresholdModal}\n            onClickThresholdButton={this.onClickThresholdButton}\n            onClickSuspendRestartRepoButton={\n              this.onClickSuspendRestartRepoButton\n            }\n            closeSuspendRestartRepoModal={this.closeSuspendRestartRepoModal}\n            closePublishValuedSecuritiesModal={\n              this.closePublishValuedSecuritiesModal\n            }\n            onClickPublishValuedSecuritiesButton={\n              this.onClickPublishValuedSecuritiesButton\n            }\n            onGridReady={this.onGridReady}\n          ></Mainscreen>\n          <Editscreen\n            toggleEditDashboardGrid={this.toggleEditDashboardGrid}\n            data={data}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/reducers/price-editing-reducer.jsx",[],"/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/filterscreen/filterscreen.jsx",[],"/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/mainscreen/mainscreen.jsx",["170","171"],"import React from \"react\";\nimport \"./mainscreen.scss\";\nimport MaintenanceHeaders from \"./maintenance-headers/maintenance-headers.jsx\";\nimport Mainscreengrid from \"./maintenance-grid/maintenance-grid.jsx\";\nconst mainScreen = (props) => {\n  let matenanceDataLastPublishDate = new Date();\n  return (\n    <div className=\"maintenance\">\n      <div className=\"mainscreenTitleAndToggle\">\n        <div className=\"mainscreenHeaderTitle\">Maintenance Screen</div>\n      </div>\n      <MaintenanceHeaders\n        data={props.data}\n        onClickPriceRollOverrideButton={props.onClickPriceRollOverrideButton}\n        closePriceRollOverrideModal={props.closePriceRollOverrideModal}\n        onSelectReview={props.onSelectReview}\n        closeGridMustSelectedModal={props.closeGridMustSelectedModal}\n        closeThresholdModal={props.closeThresholdModal}\n        onClickThresholdButton={props.onClickThresholdButton}\n        onClickThresholdButton={props.onClickThresholdButton}\n        onClickSuspendRestartRepoButton={props.onClickSuspendRestartRepoButton}\n        closeSuspendRestartRepoModal={props.closeSuspendRestartRepoModal}\n        closePublishValuedSecuritiesModal={\n          props.closePublishValuedSecuritiesModal\n        }\n        onClickPublishValuedSecuritiesButton={\n          props.onClickPublishValuedSecuritiesButton\n        }\n      ></MaintenanceHeaders>\n      <Mainscreengrid onGridReady={props.onGridReady} />\n      <div className=\"saveCancelPublishDateWrapper\">\n        <div className=\"publishDateWrapper\">\n          Last Published Date:\n          {props.data.maintenanceScreenData.matenanceDataLastPublishDate}\n        </div>\n        <div className=\"cancelAndSaveButtonWrapper\">\n          <button>Save</button>\n          <button>Cancel</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default mainScreen;\n","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/context/proce-editing-context.jsx",[],"/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/editscreen/editscreen.jsx",[],"/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/filterscreen/product-info/product-info.jsx",["172","173"],"import React from \"react\";\nimport Tierlevel from \"../../common/tier-level/tier-level.jsx\";\nimport \"./product-info.scss\";\nimport Typefilter from \"../../common/type/type.jsx\";\nimport InputSuggestions from \"../input-suggestions/input-suggestions.jsx\";\nimport SelectBox from \"../../common/simple-dropdown/dropdown.jsx\";\nimport Checkbox from \"../../common/check-box/check-box.jsx\";\n\nconst Productinfo = (props) => {\n  const {\n    selectClearedOptions,\n    selectCrossMarginOptions,\n    selectCurrencyOptions,\n    tierLevelData,\n    typeData,\n    isAllTypeChecked,\n    isAllTireChecked,\n    selectedCurrencyValue,\n    selectedCrossMarginValue,\n    selectedClearedValue,\n  } = props.data.filterPanelData;\n  return (\n    <div className=\"prodcutInfoWrapper\">\n      <fieldset>\n        <legend>Product Info Filter</legend>\n        <div className=\"cuspinLabelAndInputWrapper\">\n          <div className=\"cuspinLabel\">Cusip:</div>\n          <div className=\"cuspinInputWrapper\">\n            {/*  <InputWrapper onChange={props.onChangeCuspinValue}></InputWrapper> */}\n            <InputSuggestions\n              onChange={props.onChangeCuspinValue}\n              results={props.data.filterPanelData.cuspinSuggestionResult}\n              onClick={props.onClickSuggestionItem}\n              value={props.data.filterPanelData.cuspinValue}\n            ></InputSuggestions>\n          </div>\n          <p></p>\n          <div className=\"isinLabelAndInputWrapper\">\n            <div className=\"isinLabel\">ISIN:</div>\n            <div className=\"isinInputWrapper\">\n              <InputSuggestions\n                results={props.data.filterPanelData.isinSuggestionResult}\n                onChange={props.onChangeIsinValue}\n                onClick={props.onClickIsinSuggestionItem}\n                value={props.data.filterPanelData.isinValue}\n              ></InputSuggestions>\n            </div>\n          </div>\n          <p></p>\n          <div className=\"occSymbolLabelAndInputWrapper\">\n            <div className=\"occSymbolLabel\">OCC Symbol:</div>\n            <div className=\"occSymbolInputWrapper\">\n              <InputSuggestions\n                results={props.data.filterPanelData.occSymbolSuggestionResult}\n                onChange={props.onChangeOccSymbolValue}\n                onClick={props.onClickOccSymbolSuggestionItem}\n                value={props.data.filterPanelData.occSymbolValue}\n              ></InputSuggestions>\n            </div>\n          </div>\n          <p></p>\n        </div>\n        <div className=\"tierLabelAndValue\">\n          <div className=\"label\">Tier:</div>\n          <Checkbox\n            checkboxData={tierLevelData}\n            isAllChecked={isAllTireChecked}\n            onCheckbox={props.onSelectTireCheckbox}\n            onAllChecked={props.onAllTireChecked}\n          ></Checkbox>\n        </div>\n        <p></p>\n        <div className=\"typeLabelAndValue\">\n          <div className=\"label\">Type:</div>\n          {/* <Typefilter typeData={typeData}></Typefilter> */}\n          <Checkbox\n            isAllChecked={isAllTypeChecked}\n            checkboxData={typeData}\n            onCheckbox={props.onSelectTypeCheckbox}\n            onAllChecked={props.onAllTypeChecked}\n          ></Checkbox>\n        </div>\n        <p></p>\n        <div className=\"labelAndClearedWrapper\">\n          <div className=\"Clearedlabel\">Cleared:</div>\n          <div className=\"clearedwrapper\">\n            <SelectBox\n              type=\"single\"\n              options={selectClearedOptions}\n              onChange={props.onChangeClearedValue}\n              selectedValue={selectedClearedValue}\n            ></SelectBox>\n          </div>\n        </div>\n        <p></p>\n        <div className=\"labelAndCrossMarginWrapper\">\n          <div className=\"crossMarginLabel\">Cross Margin Eligible:</div>\n          <div className=\"crossMarginWrapper\">\n            <SelectBox\n              type=\"single\"\n              options={selectCrossMarginOptions}\n              onChange={props.onChangeCrossMarginEligibleValue}\n              selectedValue={selectedCrossMarginValue}\n            ></SelectBox>\n          </div>\n        </div>\n        <p></p>\n        <div className=\"labelAndCurrencyWrapper\">\n          <div className=\"currencyLabel\">Currency:</div>\n          <div className=\"currencyWrapper\">\n            <SelectBox\n              type=\"single\"\n              options={selectCurrencyOptions}\n              onChange={props.onChangeCurrencyValue}\n              selectedValue={selectedCurrencyValue}\n            ></SelectBox>\n          </div>\n        </div>\n      </fieldset>\n    </div>\n  );\n};\nexport default Productinfo;\n","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/filterscreen/activity-date-range/activity-date-range.jsx",["174","175","176"],"import React from \"react\";\nimport Dropdown from \"../../common/simple-dropdown/dropdown.jsx\";\nimport \"./activity-date-range.scss\";\n//import DatePicker from \"react-date-picker\";\nimport Datepicker from \"../../common/datepicker/datepicker.jsx\";\nimport ReactDatePicker from \"react-datepicker\";\nimport Daterangepicker from \"../../common/date-range-picker/date-range-picker.jsx\";\nimport Select from \"../../common/select/simple-select.jsx\";\n\nconst ActivityDateRange = (props) => {\n  return (\n    <fieldset>\n      <legend>Activity Date Range </legend>\n      <div className=\"activitydateRangeWrapper\">\n        <div className=\"labelAndHistCurrWrapper\">\n          <div className=\"wrapper\">\n            <div className=\"currHistLabel\">CURR/HIST</div>\n            <div className=\"dropdownWrapper\">\n              <Select\n                options={props.data.filterPanelData.currHistOptions}\n                id={\"currHistSelect\"}\n                selectedValue={props.data.filterPanelData.selectedHistCurrValue}\n                onChange={props.onChangeHistCurrValue}\n              ></Select>\n            </div>\n          </div>\n          {/*</div>*/}\n        </div>\n        <div className=\"dateRangeWrapper\">\n          <Daterangepicker\n            toDate={props.data.filterPanelData.toDate}\n            fromDate={props.data.filterPanelData.fromDate}\n            setFromDate={props.setFromDate}\n            setToDate={props.setToDate}\n          ></Daterangepicker>\n        </div>\n      </div>\n    </fieldset>\n  );\n};\nexport default ActivityDateRange;\n","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/filterscreen/flags-status/flags-status.jsx",[],"/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/filterscreen/filter-and-reset/filter-and-reset.jsx",["177"],"import { PropertyKeys } from \"ag-grid-community\";\nimport React from \"react\";\nimport Buttonwrapper from \"../../common/button/button.jsx\";\nimport \"./filter-and-reset.scss\";\n\nconst filterAndReset = (props) => {\n  return (\n    <div className=\"filterAndResetButtonWrapper\">\n      <Buttonwrapper\n        id=\"filter-container\"\n        label=\"Filter\"\n        onClick={props.onClickFiler}\n      ></Buttonwrapper>\n\n      <Buttonwrapper\n        id=\"reset-container\"\n        label=\"Reset\"\n        onClick={props.onClickReset}\n      ></Buttonwrapper>\n    </div>\n  );\n};\n\nexport default filterAndReset;\n","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/mainscreen/maintenance-headers/maintenance-headers.jsx",["178","179","180","181","182","183","184","185"],"import React, { useContext, useState } from \"react\";\nimport ButtonWrapper from \"../../common/button/button.jsx\";\nimport WarningModal from \"../../common/modal/warning/warning-modal.jsx\";\nimport { Menu, Dropdown, Button, message, Space, Tooltip } from \"antd\";\nimport Select from \"../../common/select/select.jsx\";\nimport \"./maintenance-headers.scss\";\nimport Modalpopup from \"../../common/modal/modal.jsx\";\nimport { ThresholdModal } from \"../threshold/threshold.jsx\";\nimport { SusupendRestartModal } from \"../suspend-restart-repository/suspend-restart-repo-modal.jsx\";\nimport { PublishSecuritiesModal } from \"../publish-valued-securities/publish-valued-securities.jsx\";\nconst Maintenanceheaders = (props) => {\n  return (\n    <div className=\"maintenanceHeaders\">\n      <div className=\"wrapper\">\n        <div className=\"dataHeadersButtonWrapper\">\n          <ButtonWrapper\n            id=\"threshold\"\n            label={\"Threshold\"}\n            onClick={props.onClickThresholdButton}\n          ></ButtonWrapper>\n          <ButtonWrapper\n            id=\"supendRestart\"\n            label={\"Supend/Restart Prices\"}\n            onClick={props.onClickSuspendRestartRepoButton}\n          ></ButtonWrapper>\n          <ButtonWrapper\n            id=\"Publish\"\n            label={\"Publish\"}\n            onClick={props.onClickPublishValuedSecuritiesButton}\n          ></ButtonWrapper>\n          <ButtonWrapper\n            id=\"PriceRollOverride\"\n            label={\"Price Roll Override\"}\n            onClick={props.onClickPriceRollOverrideButton}\n          ></ButtonWrapper>\n          <Select\n            id=\"review\"\n            data={props.data.maintenanceScreenData}\n            onChange={props.onSelectReview}\n          ></Select>\n        </div>\n        <div className=\"showColumnsPrintRefreshExportWrapper\">\n          <ButtonWrapper\n            id=\"showAllColumns\"\n            label={\"Show All Columns\"}\n            onClick={props.onSelectReview}\n          ></ButtonWrapper>\n          <ButtonWrapper\n            id=\"refresh\"\n            label={\"Refresh\"}\n            onClick={props.onSelectReview}\n          ></ButtonWrapper>\n          <ButtonWrapper\n            id=\"print\"\n            label={\"Print\"}\n            onClick={props.onSelectReview}\n          ></ButtonWrapper>\n          <ButtonWrapper\n            id=\"export\"\n            label={\"Export\"}\n            onClick={props.onSelectReview}\n          ></ButtonWrapper>\n        </div>\n      </div>\n      <WarningModal\n        isModalOpen={\n          props.data.maintenanceScreenData.isPriceRollOverrideModalOpen\n        }\n        closeModal={props.closePriceRollOverrideModal}\n        warningMessage={\n          props.data.maintenanceScreenData.PriceRollOverrideMModalWarningMessage\n        }\n      ></WarningModal>\n      <WarningModal\n        isModalOpen={props.data.maintenanceScreenData.openGridMustSelectedModal}\n        closeModal={props.closeGridMustSelectedModal}\n        warningMessage={\n          props.data.maintenanceScreenData.gridMustBePopulateModalWarningMessage\n        }\n      ></WarningModal>\n      <Modalpopup\n        isModalOpen={props.data.maintenanceScreenData.isThresholdModalOpen}\n        closeModal={props.closeThresholdModal}\n      ></Modalpopup>\n      <ThresholdModal\n        isModalOpen={props.data.maintenanceScreenData.isThresholdModalOpen}\n        closeModal={props.closeThresholdModal}\n      />\n      <SusupendRestartModal\n        isModalOpen={\n          props.data.maintenanceScreenData.isSuspendRestartRepoModalOpen\n        }\n        closeModal={props.closeSuspendRestartRepoModal}\n      />\n\n      <PublishSecuritiesModal\n        isModalOpen={\n          props.data.maintenanceScreenData.isPublishValuedSecuritiesModalOpen\n        }\n        closeModal={props.closePublishValuedSecuritiesModal}\n      ></PublishSecuritiesModal>\n    </div>\n  );\n};\n\nexport default Maintenanceheaders;\n","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/editscreen/edit-dashboard-grid/edit-dashboard-grid.jsx",["186","187","188"],"import React from \"react\";\nimport Aggrid from \"../../common/ag-grid/ag-grid.jsx\";\nconst rowData = [\n  {\n    ValuedSecurityEdits: \"test\",\n    Intraday_Flagged_Records: 0,\n    Intraday_Review_Needed: 1,\n    Stock_Loan_Flagged_Records: 0,\n    Stock_Loan_Review_Needed: 0,\n    Final_Flagged_Records: 0,\n    Final_Review_Needed: 0,\n    Final_Secondary_Review_Needed: 0,\n    Final_Secondary_Review_Needed: 0,\n    Stock_Loan_Primary_Review_Needed: 0,\n    Stock_Loan_Secondary_Review_Needed: 0,\n  },\n  {\n    ValuedSecurityEdits: \"test1\",\n    Intraday_Flagged_Records: 0,\n    Intraday_Review_Needed: 1,\n    Stock_Loan_Flagged_Records: 0,\n    Stock_Loan_Review_Needed: 0,\n    Final_Flagged_Records: 0,\n    Final_Review_Needed: 0,\n    Final_Secondary_Review_Needed: 0,\n    Final_Secondary_Review_Needed: 0,\n    Stock_Loan_Primary_Review_Needed: 0,\n    Stock_Loan_Secondary_Review_Needed: 0,\n  },\n  {\n    ValuedSecurityEdits: \"test2\",\n    Intraday_Flagged_Records: 0,\n    Intraday_Review_Needed: 1,\n    Stock_Loan_Flagged_Records: 0,\n    Stock_Loan_Review_Needed: 0,\n    Final_Flagged_Records: 0,\n    Final_Review_Needed: 0,\n    Final_Secondary_Review_Needed: 0,\n    Final_Secondary_Review_Needed: 0,\n    Stock_Loan_Primary_Review_Needed: 0,\n    Stock_Loan_Secondary_Review_Needed: 0,\n  },\n];\nconst colDefsMedalsIncluded = [\n  /*   {\n    width: 60,\n    headerCheckboxSelection: true,\n    headerCheckboxSelectionFilteredOnly: true,\n    checkboxSelection: true,\n  }, */\n  { field: \"ValuedSecurityEdits\", width: \"auto\" },\n  { field: \"Intraday_Flagged_Records\", width: \"auto\" },\n  { field: \"Intraday_Review_Needed\", width: \"auto\" },\n  { field: \"Stock_Loan_Flagged_Records\", width: \"auto\" },\n  { field: \"Stock_Loan_Review_Needed\", width: \"auto\" },\n  { field: \"Final_Flagged_Records\", width: \"auto\" },\n  { field: \"Final_Review_Needed\", width: \"auto\" },\n  { field: \"Final_Primary_Review_Needed\", width: \"auto\" },\n  { field: \"Final_Secondary_Review_Needed\", width: \"auto\" },\n  { field: \"Stock_Loan_Primary_Review_Needed\", width: \"auto\" },\n  { field: \"Stock_Loan_Secondary_Review_Needed\", width: \"auto\" },\n];\nconst defaultColDef = {\n  initialWidth: \"auto\",\n  sortable: true,\n  resizable: true,\n  filter: true,\n  rowSelection: \"multiple\",\n};\n\nconst Maintenancegrid = () => {\n  return (\n    <Aggrid\n      rowData={rowData}\n      colDefsMedalsIncluded={colDefsMedalsIncluded}\n      defaultColDef={defaultColDef}\n      gridHeight={240}\n      gridWidth=\"auto\"\n      rowSelection=\"multiple\"\n    />\n  );\n};\nexport default Maintenancegrid;\n","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/mainscreen/maintenance-grid/maintenance-grid.jsx",[],"/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/filterscreen/input-suggestions/input-suggestions.jsx",[],"/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/common/simple-dropdown/dropdown.jsx",[],"/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/common/datepicker/datepicker.jsx",[],"/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/common/button/button.jsx",["189"],"import React from \"react\";\n\nconst ButtonWrapper = (props) => {\n  const {} = props;\n  return (\n    <button id={props.id} className={props.classes} onClick={props.onClick}>\n      {props.label}\n    </button>\n  );\n};\n\nexport default ButtonWrapper;\n","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/common/select/select.jsx",[],"/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/common/date-range-picker/date-range-picker.jsx",["190","191","192","193"],"import React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { addDays } from \"date-fns\";\n\nfunction duriationOfDates(fromDate, toDate) {\n  const date1 = new Date(fromDate);\n  const date2 = new Date(toDate);\n  const diffTime = Math.abs(date2 - date1);\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n  return diffDays;\n}\nfunction getArrayOfDates(fromDate, toDate, numberOfDays = 0) {\n  let fromDates = [];\n  let toDates = [];\n\n  if (numberOfDays < 0) {\n    for (let i = 0; i < Math.abs(numberOfDays); i++) {\n      fromDates.push(addDays(fromDate, -i));\n    }\n  } else {\n    let diffDays = duriationOfDates(fromDate, toDate);\n    for (let i = 0; i < diffDays; i++) {\n      toDates.push(addDays(fromDate, i));\n    }\n  }\n\n  return numberOfDays < 0 ? fromDates : toDates;\n}\n\nconst Daterangepicker = (props) => {\n  const [fromDate, setStartDate] = useState(new Date());\n  const [toDate, setEndDate] = useState(new Date());\n\n  return (\n    <>\n      <div className=\"fromDateLabelAndPickerWrapper\">\n        <div className=\"label\">From Date</div>\n        <div className=\"datePickerWrapper \">\n          <DatePicker\n            selected={props.fromDate}\n            onChange={props.setFromDate}\n            selectsStart\n            includeDates={getArrayOfDates(props.fromDate, props.toDate, -30)}\n          />\n        </div>\n      </div>\n      <div className=\"toDateLabelAndPickerWrapper\">\n        <div className=\"label\">To Date</div>\n        <div className=\"datePickerWrapper\">\n          <DatePicker\n            selected={props.toDate}\n            onChange={props.setToDate}\n            selectsEnd\n            includeDates={getArrayOfDates(props.fromDate, props.toDate)}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\nexport default Daterangepicker;\n","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/common/modal/modal.jsx",["194"],"import React, { useContext } from \"react\";\nimport Modal from \"react-modal\";\nimport \"./modal.scss\";\nexport const ModalContent = (props) => {\n  return (\n    <div className=\"modalContentWrapper\">\n      <div className=\"header\">Thresholds</div>\n      <div className=\"contentWrapper\"></div>\n      <div className=\"buttonsWrapper\">\n        <button>Save</button>\n        <button>Reset</button>\n        <button onClick={props.closeModal}>Cancel</button>\n      </div>\n    </div>\n  );\n};\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\nconst Modalpopup = (props) => {\n  return (\n    <Modal isOpen={props.isModalOpen} style={customStyles}>\n      <ModalContent data={props} closeModal={props.closeModal} />\n    </Modal>\n  );\n};\n\nexport default Modalpopup;\n","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/common/modal/warning/warning-modal.jsx",["195","196","197","198"],"import React, { useContext } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Modal from \"react-modal\";\nimport \"./warning-modal.scss\";\nimport stopIcon from \"../../../../resources/images/error-image-icon-23.jpg\";\nexport const Warning = (props) => {\n  return (\n    <div className=\"warningWrapper\">\n      <div className=\"header\">\n        <div className=\"headerCode\">COMM0032</div>\n        <div className=\"closeIcon\">X</div>\n      </div>\n      <p></p>\n      <div className=\"contentAndStopIconWrapper\">\n        <div className=\"stopIcon\">\n          <img src={stopIcon}></img>\n        </div>\n        <div className=\"warningMessage\">{props.data.warningMessage}</div>\n      </div>\n\n      <button className=\"okButton\" onClick={props.closeModal}>\n        OK\n      </button>\n    </div>\n  );\n};\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\nconst WarningModal = (props) => {\n  //const { ContentComponent } = { props };\n  return (\n    <Modal\n      isOpen={props.isModalOpen}\n      contentLabel=\"Warning\"\n      style={customStyles}\n      contentLabel=\"Warning\"\n    >\n      <Warning data={props} closeModal={props.closeModal} />\n    </Modal>\n  );\n};\n\nexport default WarningModal;\n","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/common/suggestions/suggestions.jsx",[],"/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/mainscreen/threshold/threshold.jsx",["199"],"import React from \"react\";\nimport Modal from \"react-modal\";\nimport \"./threshold.scss\";\nimport Thresholdgrid from \"./threshold-grid/threshold-grid.jsx\";\nconst ThresholdModalContent = (props) => {\n  return (\n    <div>\n      <div className=\"addAndDeleteButtonsWrapper\">\n        <button className=\"addButton\">Add</button>\n        <button className=\"deleteButton\">Delete</button>\n      </div>\n      <Thresholdgrid />\n    </div>\n  );\n};\n\nconst Threshold = (props) => {\n  return (\n    <div className=\"modalContentWrapper\">\n      <div className=\"headerWrapper\">\n        <div className=\"header\">Thresholds</div>\n        <div className=\"helpAndCloseIcon\">\n          <div className=\"help\">?</div>\n          <div className=\"close\">X</div>\n        </div>\n      </div>\n      <div className=\"body\">\n        <ThresholdModalContent></ThresholdModalContent>\n      </div>\n      <div className=\"footer\">\n        <button id=\"saveButton\" onClick={props.onSave}>\n          Save\n        </button>\n        <button id=\"resetButton\" onClick={props.onReset}>\n          Reset\n        </button>\n        <button id=\"cancelButton\" onClick={props.closeModal}>\n          Cancel\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\nconst ThresholdModal = (props) => {\n  return (\n    <Modal isOpen={props.isModalOpen} style={customStyles}>\n      {/*       <ModalContent data={props} closeModal={props.closeModal} /> */}\n      <Threshold closeModal={props.closeModal}></Threshold>\n    </Modal>\n  );\n};\n\nexport { ThresholdModal as ThresholdModal };\n","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/mainscreen/threshold/threshold-grid/threshold-grid.jsx",[],"/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/mainscreen/suspend-restart-repository/suspend-restart-repo-modal.jsx",["200"],"import React from \"react\";\nimport Modal from \"react-modal\";\nimport \"./suspend-restart-repo-modal.scss\";\nimport Tier from \"../../common/tier-level/tier-level.jsx\";\nimport Dropdown from \"../../common/simple-dropdown/dropdown.jsx\";\nimport SuspendRestartRepoGrid from \"./suspend-restart-grid/suspend-restart-grid.jsx\";\nlet tierLevelData = [\n  { label: \"All\", value: \"All\" },\n  { label: \"1\", value: \"one\" },\n  { label: \"2\", value: \"two\" },\n  { label: \"3\", value: \"three\" },\n  { label: \"4\", value: \"four\" },\n];\nlet vendorOptions = [\n  { label: \"CURRENT\", value: \"Current\" },\n  { label: \"HISTORICAL\", value: \"Historical\" },\n];\nconst SusupendRestartModalContent = (props) => {\n  return (\n    <div>\n      <fieldset>\n        <legend>Tier Designation</legend>\n        <div className=\"label\">Tier:</div>\n        <Tier tierLevelData={tierLevelData}></Tier>\n      </fieldset>\n      <div className=\"vendorExchangeProductWrapper\">\n        <fieldset style={{ width: \"33%\" }}>\n          <legend>Vendor</legend>\n          <Dropdown options={vendorOptions}></Dropdown>\n        </fieldset>\n        <fieldset style={{ width: \"33%\" }}>\n          <legend>Exchange</legend>\n          <Dropdown options={vendorOptions}></Dropdown>\n        </fieldset>\n        <fieldset style={{ width: \"33%\" }}>\n          <legend>Product Symbol</legend>\n          <Dropdown options={vendorOptions}></Dropdown>\n        </fieldset>\n      </div>\n\n      <div className=\"suspendRestartButtonsWrapper\">\n        <button className=\"suspendButton\">Suspend</button>\n        <button className=\"RestartButton\">Restart</button>\n      </div>\n      <div className=\"refreshAndDeleteButtonsWrapper\">\n        <button className=\"deleteButton\">Delete</button>\n        <button className=\"refreshButton\">Refresh</button>\n      </div>\n      <SuspendRestartRepoGrid></SuspendRestartRepoGrid>\n    </div>\n  );\n};\n\nconst SuspendRestartRepo = (props) => {\n  return (\n    <div className=\"modalContentWrapper\">\n      <div className=\"headerWrapper\">\n        <div className=\"header\">\n          Valued Securities Suspend/Restart Repositories\n        </div>\n        <div className=\"helpAndCloseIcon\">\n          <div className=\"help\">?</div>\n          <div className=\"close\">X</div>\n        </div>\n      </div>\n      <div className=\"body\">\n        <SusupendRestartModalContent></SusupendRestartModalContent>\n      </div>\n      <div className=\"footer\">\n        <button id=\"resetButton\" onClick={props.onReset}>\n          Reset\n        </button>\n        <button id=\"cancelButton\" onClick={props.closeModal}>\n          Cancel\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\nconst SusupendRestartModal = (props) => {\n  return (\n    <Modal isOpen={props.isModalOpen} style={customStyles}>\n      {/*       <ModalContent data={props} closeModal={props.closeModal} /> */}\n      <SuspendRestartRepo closeModal={props.closeModal}></SuspendRestartRepo>\n    </Modal>\n  );\n};\n\nexport { SusupendRestartModal as SusupendRestartModal };\n","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/mainscreen/suspend-restart-repository/suspend-restart-grid/suspend-restart-grid.jsx",[],"/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/mainscreen/publish-valued-securities/publish-valued-securities.jsx",["201"],"import React from \"react\";\nimport Modal from \"react-modal\";\nimport \"./publish-valued-securities.scss\";\nimport Tier from \"../../common/tier-level/tier-level.jsx\";\nimport Type from \"../../common/type/type.jsx\";\n\nlet tierLevelData = [\n  { label: \"All\", value: \"All\" },\n  { label: \"1\", value: \"one\" },\n  { label: \"2\", value: \"two\" },\n  { label: \"3\", value: \"three\" },\n  { label: \"4\", value: \"four\" },\n];\n\nconst PublishSecuritiesModalContent = (props) => {\n  return (\n    <div>\n      <fieldset>\n        <legend>Tiers</legend>\n        <div className=\"label\">Tier:</div>\n        <Tier tierLevelData={tierLevelData}></Tier>\n      </fieldset>\n      <fieldset>\n        <legend>Product Type</legend>\n        <div className=\"label\">Type:</div>\n        <Type></Type>\n      </fieldset>\n      <fieldset>\n        <legend>Eligibility</legend>\n        <div className=\"label\">RBH Eligible:</div>\n        <label>\n          <input type=\"checkbox\" value=\"rbhEligible\"></input>\n        </label>\n      </fieldset>\n    </div>\n  );\n};\n\nconst PublishSecurities = (props) => {\n  return (\n    <div className=\"modalContentWrapper\">\n      <div className=\"headerWrapper\">\n        <div className=\"header\">\n          Valued Securities Suspend/Restart Repositories\n        </div>\n        <div className=\"helpAndCloseIcon\">\n          <div className=\"help\">?</div>\n          <div className=\"close\">X</div>\n        </div>\n      </div>\n      <div className=\"body\">\n        <PublishSecuritiesModalContent></PublishSecuritiesModalContent>\n      </div>\n      <div className=\"footer\">\n        <button id=\"resetButton\" onClick={props.onReset}>\n          Reset\n        </button>\n        <button id=\"cancelButton\" onClick={props.closeModal}>\n          Cancel\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\nconst PublishSecuritiesModal = (props) => {\n  return (\n    <Modal isOpen={props.isModalOpen} style={customStyles}>\n      {/*       <ModalContent data={props} closeModal={props.closeModal} /> */}\n      <PublishSecurities closeModal={props.closeModal}></PublishSecurities>\n    </Modal>\n  );\n};\n\nexport { PublishSecuritiesModal as PublishSecuritiesModal };\n","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/Apptest.jsx",["202","203","204"],"import React, { Component, useState, useEffect } from \"react\";\nimport CheckboxGroup from \"react-checkbox-group\";\n\nimport \"./Apptest.scss\";\n\nexport const CheckBox = (props) => {\n  return (\n    <li>\n      <input\n        key={props.id}\n        onClick={props.handleCheckChieldElement}\n        type=\"checkbox\"\n        checked={props.isChecked}\n        value={props.value}\n      />{\" \"}\n      {props.value}\n    </li>\n  );\n};\n\nclass Apptest extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAllChecked: false,\n      fruites: [\n        { id: 1, value: \"banana\", isChecked: false },\n        { id: 2, value: \"apple\", isChecked: false },\n        { id: 3, value: \"mango\", isChecked: false },\n        { id: 4, value: \"grap\", isChecked: false },\n      ],\n    };\n  }\n\n  handleAllChecked = (event) => {\n    let fruites = this.state.fruites;\n    let isAllChecked = this.state.isAllChecked;\n    fruites.forEach((fruite) => {\n      return (fruite.isChecked = event.target.checked);\n    });\n    this.setState({ fruites: fruites, isAllChecked: !isAllChecked });\n  };\n\n  handleCheckChieldElement = (event) => {\n    let fruites = this.state.fruites;\n    let isAllChecked = false;\n    let selectionCount = 0;\n    fruites.forEach((fruite) => {\n      if (fruite.value === event.target.value)\n        fruite.isChecked = event.target.checked;\n\n      if (fruite.isChecked) {\n        selectionCount++;\n      }\n      isAllChecked = selectionCount === fruites.length ? true : false;\n    });\n\n    this.setState({ fruites: fruites, isAllChecked: isAllChecked });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1> Check and Uncheck All Example </h1>\n        <input\n          type=\"checkbox\"\n          onClick={this.handleAllChecked}\n          value=\"checkedall\"\n          checked={this.state.isAllChecked}\n        />{\" \"}\n        Check / Uncheck All\n        <ul>\n          {this.state.fruites.map((fruite) => {\n            return (\n              <CheckBox\n                handleCheckChieldElement={this.handleCheckChieldElement}\n                {...fruite}\n              />\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Apptest;\n","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/common/select/simple-select.jsx",[],"/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/common/ag-grid/ag-grid.jsx",[],"/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/common/type/type.jsx",["205","206","207","208"],"import React, { useState } from \"react\";\nimport \"./type.scss\";\n\nconst Typefilter = (props) => {\n  const [allTypes, setAllTypes] = useState(false);\n  const [allChecked, setAllChecked] = useState(false);\n  const [commonStock, setCommonStock] = useState(false);\n  const [preferredStock, setPreferredStock] = useState(false);\n  const [index, setIndex] = useState(false);\n  const [corporateDebt, setCorporateDebt] = useState(false);\n  const [fms, setFms] = useState(false);\n  const [types, setTypes] = useState([\"All\", \"Index\"]);\n\n  let typeData = [\n    { label: \"All\", value: \"All\" },\n    { label: \"Common Stock\", value: \"commonStock\" },\n    { label: \"Preffered Stock\", value: \"prefferedStock\" },\n    { label: \"Index\", value: \"index\" },\n    { label: \"Corporate Debt\", value: \"corporateDebt\" },\n    { label: \"FMS\", value: \"fms\" },\n  ];\n\n  return (\n    <div className=\"rTable\">\n      <div className=\"rTableRow\">\n        <div className=\"rTableCell\">\n          <label>\n            <input\n              className=\"checkbox\"\n              type=\"checkbox\"\n              checked={\n                allChecked ||\n                allTypes ||\n                (commonStock && preferredStock && index && corporateDebt && fms)\n              }\n              onChange={() => setAllTypes(!allTypes)}\n            ></input>\n            All\n          </label>\n        </div>\n      </div>\n      <div className=\"rTableRow\">\n        <div className=\"rTableCell\">\n          <label>\n            <input\n              className=\"checkbox\"\n              type=\"checkbox\"\n              value=\"Commonstock\"\n              checked={allTypes || commonStock}\n              onChange={(e) => setCommonStock(!commonStock)}\n            ></input>\n            Common Stock\n          </label>\n        </div>\n        <div className=\"rTableCell\">\n          <label>\n            <input\n              className=\"checkbox\"\n              type=\"checkbox\"\n              value=\"preferredStock\"\n              checked={allTypes || preferredStock}\n              onChange={() => setPreferredStock(!preferredStock)}\n            ></input>\n            Preffered Stock\n          </label>\n        </div>\n      </div>\n      <div className=\"rTableRow\">\n        <div className=\"rTableCell\">\n          <label>\n            <input\n              className=\"checkbox\"\n              type=\"checkbox\"\n              value=\"index\"\n              checked={allTypes || index}\n              onChange={() => setIndex(!index)}\n            ></input>\n            Index\n          </label>\n        </div>\n        <div className=\"rTableCell\">\n          <label>\n            <input\n              className=\"checkbox\"\n              type=\"checkbox\"\n              value=\"Corporatedebt\"\n              checked={allTypes || corporateDebt}\n              onChange={() => setCorporateDebt(!corporateDebt)}\n            ></input>\n            Corporate Debt\n          </label>\n        </div>\n      </div>\n      <div className=\"rTableRow\">\n        <div className=\"rTableCell\">\n          <label>\n            <input\n              className=\"checkbox\"\n              type=\"checkbox\"\n              value=\"fms\"\n              checked={allTypes || fms}\n              onChange={() => setFms(!fms)}\n            ></input>\n            FMS\n          </label>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Typefilter;\n","/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/common/tier-level/tier-level.jsx",[],"/Users/venkataswamyb/Desktop/project/react/Professional/react-grid-with-filters/encore-app/src/components/common/check-box/check-box.jsx",[],{"ruleId":"209","severity":1,"message":"210","line":6,"column":8,"nodeType":"211","messageId":"212","endLine":6,"endColumn":15},{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","replacedBy":"216"},{"ruleId":"209","severity":1,"message":"217","line":1,"column":28,"nodeType":"211","messageId":"212","endLine":1,"endColumn":38},{"ruleId":"209","severity":1,"message":"218","line":2,"column":8,"nodeType":"211","messageId":"212","endLine":2,"endColumn":12},{"ruleId":"209","severity":1,"message":"219","line":7,"column":8,"nodeType":"211","messageId":"212","endLine":7,"endColumn":27},{"ruleId":"209","severity":1,"message":"220","line":8,"column":8,"nodeType":"211","messageId":"212","endLine":8,"endColumn":27},{"ruleId":"209","severity":1,"message":"221","line":9,"column":10,"nodeType":"211","messageId":"212","endLine":9,"endColumn":29},{"ruleId":"209","severity":1,"message":"222","line":10,"column":8,"nodeType":"211","messageId":"212","endLine":10,"endColumn":9},{"ruleId":"209","severity":1,"message":"223","line":497,"column":9,"nodeType":"211","messageId":"212","endLine":497,"endColumn":22},{"ruleId":"209","severity":1,"message":"224","line":6,"column":7,"nodeType":"211","messageId":"212","endLine":6,"endColumn":35},{"ruleId":"225","severity":1,"message":"226","line":20,"column":9,"nodeType":"227","messageId":"228","endLine":20,"endColumn":62},{"ruleId":"209","severity":1,"message":"229","line":2,"column":8,"nodeType":"211","messageId":"212","endLine":2,"endColumn":17},{"ruleId":"209","severity":1,"message":"230","line":4,"column":8,"nodeType":"211","messageId":"212","endLine":4,"endColumn":18},{"ruleId":"209","severity":1,"message":"231","line":2,"column":8,"nodeType":"211","messageId":"212","endLine":2,"endColumn":16},{"ruleId":"209","severity":1,"message":"232","line":5,"column":8,"nodeType":"211","messageId":"212","endLine":5,"endColumn":18},{"ruleId":"209","severity":1,"message":"233","line":6,"column":8,"nodeType":"211","messageId":"212","endLine":6,"endColumn":23},{"ruleId":"209","severity":1,"message":"234","line":1,"column":10,"nodeType":"211","messageId":"212","endLine":1,"endColumn":22},{"ruleId":"209","severity":1,"message":"235","line":1,"column":17,"nodeType":"211","messageId":"212","endLine":1,"endColumn":27},{"ruleId":"209","severity":1,"message":"236","line":1,"column":29,"nodeType":"211","messageId":"212","endLine":1,"endColumn":37},{"ruleId":"209","severity":1,"message":"237","line":4,"column":10,"nodeType":"211","messageId":"212","endLine":4,"endColumn":14},{"ruleId":"209","severity":1,"message":"231","line":4,"column":16,"nodeType":"211","messageId":"212","endLine":4,"endColumn":24},{"ruleId":"209","severity":1,"message":"238","line":4,"column":26,"nodeType":"211","messageId":"212","endLine":4,"endColumn":32},{"ruleId":"209","severity":1,"message":"239","line":4,"column":34,"nodeType":"211","messageId":"212","endLine":4,"endColumn":41},{"ruleId":"209","severity":1,"message":"240","line":4,"column":43,"nodeType":"211","messageId":"212","endLine":4,"endColumn":48},{"ruleId":"209","severity":1,"message":"241","line":4,"column":50,"nodeType":"211","messageId":"212","endLine":4,"endColumn":57},{"ruleId":"242","severity":1,"message":"243","line":13,"column":5,"nodeType":"244","messageId":"245","endLine":13,"endColumn":34},{"ruleId":"242","severity":1,"message":"243","line":26,"column":5,"nodeType":"244","messageId":"245","endLine":26,"endColumn":34},{"ruleId":"242","severity":1,"message":"243","line":39,"column":5,"nodeType":"244","messageId":"245","endLine":39,"endColumn":34},{"ruleId":"246","severity":1,"message":"247","line":4,"column":9,"nodeType":"248","messageId":"245","endLine":4,"endColumn":11},{"ruleId":"209","severity":1,"message":"249","line":32,"column":10,"nodeType":"211","messageId":"212","endLine":32,"endColumn":18},{"ruleId":"209","severity":1,"message":"250","line":32,"column":20,"nodeType":"211","messageId":"212","endLine":32,"endColumn":32},{"ruleId":"209","severity":1,"message":"251","line":33,"column":10,"nodeType":"211","messageId":"212","endLine":33,"endColumn":16},{"ruleId":"209","severity":1,"message":"252","line":33,"column":18,"nodeType":"211","messageId":"212","endLine":33,"endColumn":28},{"ruleId":"209","severity":1,"message":"235","line":1,"column":17,"nodeType":"211","messageId":"212","endLine":1,"endColumn":27},{"ruleId":"209","severity":1,"message":"235","line":1,"column":17,"nodeType":"211","messageId":"212","endLine":1,"endColumn":27},{"ruleId":"209","severity":1,"message":"253","line":2,"column":8,"nodeType":"211","messageId":"212","endLine":2,"endColumn":16},{"ruleId":"254","severity":1,"message":"255","line":16,"column":11,"nodeType":"256","endLine":16,"endColumn":31},{"ruleId":"225","severity":1,"message":"226","line":44,"column":7,"nodeType":"227","messageId":"228","endLine":44,"endColumn":29},{"ruleId":"257","severity":1,"message":"258","line":64,"column":10,"nodeType":"259","messageId":"260","endLine":64,"endColumn":42,"fix":"261"},{"ruleId":"257","severity":1,"message":"262","line":100,"column":10,"nodeType":"259","messageId":"260","endLine":100,"endColumn":54,"fix":"263"},{"ruleId":"257","severity":1,"message":"264","line":85,"column":10,"nodeType":"259","messageId":"260","endLine":85,"endColumn":58,"fix":"265"},{"ruleId":"209","severity":1,"message":"236","line":1,"column":28,"nodeType":"211","messageId":"212","endLine":1,"endColumn":36},{"ruleId":"209","severity":1,"message":"266","line":1,"column":38,"nodeType":"211","messageId":"212","endLine":1,"endColumn":47},{"ruleId":"209","severity":1,"message":"267","line":2,"column":8,"nodeType":"211","messageId":"212","endLine":2,"endColumn":21},{"ruleId":"209","severity":1,"message":"268","line":6,"column":22,"nodeType":"211","messageId":"212","endLine":6,"endColumn":35},{"ruleId":"209","severity":1,"message":"269","line":12,"column":10,"nodeType":"211","messageId":"212","endLine":12,"endColumn":15},{"ruleId":"209","severity":1,"message":"270","line":12,"column":17,"nodeType":"211","messageId":"212","endLine":12,"endColumn":25},{"ruleId":"209","severity":1,"message":"271","line":14,"column":7,"nodeType":"211","messageId":"212","endLine":14,"endColumn":15},"no-unused-vars","'Apptest' is defined but never used.","Identifier","unusedVar","no-native-reassign",["272"],"no-negated-in-lhs",["273"],"'useReducer' is defined but never used.","'logo' is defined but never used.","'PriceEditingContext' is defined but never used.","'PriceEditingReducer' is defined but never used.","'computeHeadingLevel' is defined but never used.","'_' is defined but never used.","'filterObject1' is assigned a value but never used.","'matenanceDataLastPublishDate' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'Tierlevel' is defined but never used.","'Typefilter' is defined but never used.","'Dropdown' is defined but never used.","'Datepicker' is defined but never used.","'ReactDatePicker' is defined but never used.","'PropertyKeys' is defined but never used.","'useContext' is defined but never used.","'useState' is defined but never used.","'Menu' is defined but never used.","'Button' is defined but never used.","'message' is defined but never used.","'Space' is defined but never used.","'Tooltip' is defined but never used.","no-dupe-keys","Duplicate key 'Final_Secondary_Review_Needed'.","ObjectExpression","unexpected","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'fromDate' is assigned a value but never used.","'setStartDate' is assigned a value but never used.","'toDate' is assigned a value but never used.","'setEndDate' is assigned a value but never used.","'ReactDOM' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-useless-rename","Export ThresholdModal unnecessarily renamed.","ExportSpecifier","unnecessarilyRenamed",{"range":"274","text":"275"},"Export SusupendRestartModal unnecessarily renamed.",{"range":"276","text":"277"},"Export PublishSecuritiesModal unnecessarily renamed.",{"range":"278","text":"279"},"'useEffect' is defined but never used.","'CheckboxGroup' is defined but never used.","'setAllChecked' is assigned a value but never used.","'types' is assigned a value but never used.","'setTypes' is assigned a value but never used.","'typeData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[1654,1686],"ThresholdModal",[3079,3123],"SusupendRestartModal",[2247,2295],"PublishSecuritiesModal"]